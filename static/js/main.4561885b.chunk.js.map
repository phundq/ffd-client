{"version":3,"sources":["component/Pagination.js","constant/APIConstant.js","service/Request.js","page/admin/Kind.js","page/admin/User.js","util/Storage.js","service/API.js","util/History.js","component/NavCustom.js","component/Test.js","component/HeaderCustom.js","page/admin/Admin.js","app/LoadRouter.js","component/SubNavBar.js","component/Wellcome.js","component/Branch.js","component/BranchDetails.js","page/product/Product.js","component/Invoice.js","page/Singin.js","component/ManagerHomePage.js","component/ShipperHomePage.js","component/InvoiceHistory.js","component/ItemDetails.js","component/Search.js","component/ManagerBranchsAndItems.js","component/PurchaseCallBack.js","app/App.js","serviceWorker.js","index.js"],"names":["Content","styled","div","props","API_BASE_URL","accessToken","Request","token","url","params","config","headers","mode","this","_getQueryString","_authorization","Authorization","fetch","res","ok","text","responseData","JSON","parse","data","method","body","stringify","parts","lodash","forEach","value","key","values","isArray","operator","v","push","encodeURIComponent","queryString","join","Kind","state","kinds","page","size","total","isLoading","resStatus","_getKinds","bind","get","console","log","setState","content","pageSize","columns","title","dataIndex","rowSelection","onChange","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","name","Demo","useState","selectionType","setSelectionType","addContent","initialValues","remember","label","rules","required","message","htmlType","type","style","marginLeft","Group","target","float","placement","dataSource","pagination","Pagination","defaultCurrent","_handlerPagination","Component","User","users","_getUsers","current","Storage","defaultValue","localStorage","getItem","error","setItem","removeItem","clear","branchId","invoiceArrayUpdate","map","invoice","index","splice","length","remove","itemId","branchName","image","price","quantity","invoiceArray","flag","has","invoiceLines","flag2","invoiceLine","newInvoiceLine","newInvoice","API","code","role","id","filter","post","status","put","invoiceId","shipperId","userId","evaluate","file","formData","FormData","append","postFormData","address","description","phone","timeOpen","timeClose","managerId","kindId","ids","delete","postOrder","res2","amount","discountamount","appid","checksum","apptransid","pmcid","bankcode","app_id","app_trans_id","bank_code","history","createBrowserHistory","NavCustom","Layout","Header","Sider","user","loading","setAccessToken","getCurrentUser","fullName","removeAccessToken","window","location","href","redirectName","helloToUser","Item","className","Link","to","singinStatus","onClick","_handlerSingout","xs","md","theme","defaultSelectedKeys","HeaderCustom","trigger","navbar","showHeader","height","span","fontSize","SubMenu","Menu","Admin","contents","collapsed","_onClickMenu","innerWidth","Comp","nProgress","start","done","width","MenuUnfoldOutlined","toggle","marginTop","marginBottom","color","display","MenuFoldOutlined","border","breakpoint","onBreakpoint","toggle2","collapsible","defaultOpenKeys","borderRight","onTitleClick","icon","UserOutlined","LaptopOutlined","BranchesOutlined","padding","margin","minHeight","SubNavbar","paddingRight","paddingLeft","placeholder","onSearch","paddingTop","Wellcome","items","branchs","loadComponent","_onClickBranch","_onClickItem","getTopItems","getLastModifiedBranchs","createOrder","showOwlCarouselBranchs","loop","autoplay","autoplayTimeout","branch","hoverable","cover","src","picByte","showOwlCarouselItems","dots","item","textAlign","textShadow","fontFamily","orientation","Bracnh","redirectPath","_getBranchs","_handlerClickBranch","listBranch","BranchDetails","branchImage","branchItems","modal2Visible","rateValue","rateSuccess","_getBranchItems","_getCurrentBranch","_getBranchState","toLocaleString","query","URLSearchParams","search","res1","getCurrentId","rateBranch","success","setModal2Visible","totalEvaluation","showRateBranch","showRateResult","centered","visible","onOk","_handlerClickSubmitRate","onCancel","_handlerClickChangeRate","Date","moment","now","timeCurrent","getHours","getMinutes","getSeconds","format","branchStatus","listBranchItems","Grid","fontStyle","substring","_handlerClickViewItem","shape","EyeFilled","overflow","_handlerClickAddToInvoice","PlusCircleFilled","level","numberOfEvaluations","overflowY","Invoice","invoiceStorage","_loadItem","_changeQuantity","_handlerClickDelete","_handlerClickBuy","invoiceLineUpdate","invoiceLineRequestDTOList","line","createInvoiceCustomer","removeBranchInvoice","set","render","row","min","max","Number","DeleteTwoTone","listInvoiceView","totalPay","reduce","Singin","isAuth","authFail","onFinish","onFinishFailed","email","username","password","getCurrentRole","String","authFailMess","tabIndex","prefix","LockOutlined","ManagerHomePage","defaultIndexMenu","_getAllInvoice","_handlerClickCancelOrder","_handlerClickConfirm","_handlerClickSuccessInvoice","toUpperCase","getAllInvoiceManager","confirmInvoiceCustomer","setInvoiceFail","setSuccessInvoiceCustomer","created","itemName","itemPrice","shipper","purchaseDetail","danger","ghost","selectedKeys","ShipperHomePage","invoiceAll","_getAllInvoiceOfShipper","_handlerClickPurchaseSuccess","_getAllInvoicePreparingForShipper","getAllInvoiceOfShipper","getAllInvoicePreparingForShipper","confirmInvoiceByShipper","marginRight","InvoiceHistory","invoiceHistory","isBuySuccess","_handlerClickPurchase","isCustomer","getAllInvoiceCustomer","order_url","cancelInvoiceCustomer","alert","showIcon","closable","ItemDetails","itemImage","itemCommentList","defaultCommentValue","commentSuccess","submitting","getItemDetails","commentList","addToInvoice","comment","commentItem","rateItem","showRateItem","showCommentList","itemComment","author","userName","avatar","datetime","fromNow","showItemDetails","_handlerClickAddInvoice","numberOfComments","_handlerSubmitComment","autoSize","Search","_loadComponent","_handlerClickItem","searchItems","showItems","ManagerBranchsAndItems","showDrawer","onClose","handleInputChange","event","files","handleSelectChangeBranch","handleSelectChangeKind","listKind","_getAllBranchs","_getAllItems","getBranchByManagerId","getItemByManagerId","getBranchByManagerIdForSelect","getAllKindForSelect","res3","deleteBranch","e","addNewBranch","addNewItem","addItem","position","top","right","PlusOutlined","bodyStyle","paddingBottom","footer","form","layout","enctype","hideRequiredMark","submitAddBranch","gutter","submitAddItem","kind","modified","_handlerClickDeleteBranch","_handlerClickDeleteItem","PurchaseCallback","isPurchaseSuccess","appTransId","showResult","subTitle","extra","App","Router","Route","exact","path","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4561885b.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Pagination } from 'antd'\r\nimport 'antd/es/pagination/style/css'\r\n\r\nconst Content = styled.div`\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n`\r\n\r\nexport default (props) => (\r\n  <Content>\r\n    <Pagination {...props} />\r\n  </Content>\r\n)","export const API_BASE_URL = 'https://ffd-server.herokuapp.com/';\r\nexport const ACCESS_TOKEN = 'accessToken';\r\nexport const PAGE_SIZE = 5;\r\nexport const PAGE_SIZE_BRANCH = 8;\r\nexport const PAGE_SIZE_BRANCH_ITEMS = 5;\r\nexport const PAGE_NO = 1;\r\nexport const PAGE_SIZE_INVOICE = 10;","import lodash from 'lodash'\r\nimport Axios from 'axios';\r\nimport { API_BASE_URL } from '../constant/APIConstant';\r\nlet accessToken = null;\r\n\r\nclass Request {\r\n\r\n  static setAccessToken(token) {\r\n    accessToken = token;\r\n  }\r\n\r\n  static getAccessToken() {\r\n    return accessToken;\r\n  }\r\n\r\n  static removeAccessToken() {\r\n    accessToken = null;\r\n  }\r\n\r\n  static async get(url, params) {\r\n    url = API_BASE_URL + url;\r\n    const config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': true,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      mode: 'cors'\r\n    };\r\n\r\n    if (params) {\r\n      url += this._getQueryString(params);\r\n    }\r\n\r\n    if(accessToken){\r\n      this._authorization = `Bearer ${accessToken}`;\r\n    }\r\n\r\n    if (this._authorization) {\r\n      config.headers.Authorization = this._authorization;\r\n    }\r\n\r\n    const res = await fetch(url, config);\r\n    if (!res.ok) {\r\n      throw res\r\n    }\r\n\r\n    const text = await res.text()\r\n\r\n    try {\r\n      const responseData = text !== '' ? JSON.parse(text) : ''\r\n      return responseData\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  static async post(url, data = null, params) {\r\n    url = API_BASE_URL + url;\r\n    const config = {\r\n      method: 'post',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': true,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      mode: 'cors',\r\n    };\r\n\r\n    if (params) {\r\n      url += this._getQueryString(params);\r\n    }\r\n    if(data != null){\r\n      config.body = JSON.stringify(data);\r\n    }\r\n    const res = await fetch(url, config);\r\n\r\n    const text = await res.text()\r\n\r\n    try {\r\n      const responseData = text !== '' ? JSON.parse(text) : ''\r\n      return responseData\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n\r\n\r\n  static async postOrder(url, data = null, params) {\r\n        const config = {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    if (params) {\r\n      url += this._getQueryString(params);\r\n    }\r\n    if(data != null){\r\n      config.body = JSON.stringify(data);\r\n    }\r\n    const res = await fetch(url, config);\r\n\r\n    const text = await res.text()\r\n\r\n    try {\r\n      const responseData = text !== '' ? JSON.parse(text) : ''\r\n      return responseData\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n\r\n  static async postFormData(url, data = null, params) {\r\n    url = API_BASE_URL + url;\r\n    const config = {\r\n      method: 'post'\r\n    };\r\n\r\n    if (params) {\r\n      url += this._getQueryString(params);\r\n    }\r\n    if(data != null){\r\n      config.body = data;\r\n    }\r\n    const res = await fetch(url, config);\r\n\r\n    const text = await res.text()\r\n\r\n    try {\r\n      const responseData = text !== '' ? JSON.parse(text) : ''\r\n      return responseData\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n\r\n  static async put(url, data, params) {\r\n    url = API_BASE_URL + url;\r\n    const config = {\r\n      method: 'put',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': true,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      mode: 'cors',\r\n    };\r\n\r\n    if (params) {\r\n      url += this._getQueryString(params);\r\n    }\r\n    config.body = JSON.stringify(data);\r\n    const res = await fetch(url, config);\r\n\r\n    const text = await res.text()\r\n\r\n    try {\r\n      const responseData = text !== '' ? JSON.parse(text) : ''\r\n      return responseData\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n\r\n  static async delete(url, data, params) {\r\n    url = API_BASE_URL + url;\r\n    const config = {\r\n      method: 'delete',\r\n      headers: {\r\n        'Access-Control-Allow-Origin': true,\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json',\r\n      },\r\n      mode: 'cors',\r\n    };\r\n\r\n    if (params) {\r\n      url += this._getQueryString(params);\r\n    }\r\n    config.body = JSON.stringify(data);\r\n    const res = await fetch(url, config);\r\n\r\n    const text = await res.text()\r\n\r\n    try {\r\n      const responseData = text !== '' ? JSON.parse(text) : ''\r\n      return responseData\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  }\r\n\r\n\r\n  static _getQueryString(params) {\r\n    const parts = []\r\n\r\n    lodash.forEach(params, (value, key) => {\r\n      const values = lodash.isArray(value) ? value : [value]\r\n      const operator = lodash.isArray(value) ? '[]=' : '='\r\n\r\n      lodash.forEach(values, (v) => {\r\n        parts.push(key + operator + encodeURIComponent(v))\r\n      })\r\n    })\r\n\r\n    const queryString = parts.join('&')\r\n\r\n    return queryString ? `?${queryString}` : ''\r\n  }\r\n\r\n}\r\nexport default Request;","import React, { Component, useState } from 'react';\r\nimport { Table, Radio, Divider, Button, Space, Collapse, Popover, Input } from 'antd';\r\nimport nprogress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nimport Axios from 'axios';\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\nimport Form from 'antd/lib/form/Form';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport Pagination from '../../component/Pagination';\r\nimport Request from '../../service/Request';\r\n\r\nconst PAGE_SIZE = 5;\r\nexport default class Kind extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            kinds: [],\r\n            page : 1,\r\n            size : 5,\r\n            total : 0,\r\n            isLoading: true,\r\n            resStatus: null\r\n        }\r\n        this._getKinds = this._getKinds.bind(this);\r\n    }\r\n\r\n    async _getKinds(page = 1){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': true,\r\n            },\r\n            mode: 'cors'\r\n        };\r\n\r\n        const res = await Request.get('api/v1/kinds',{page: page, size: PAGE_SIZE});\r\n        console.log(res);\r\n        this.setState({\r\n            kinds: res.data.content,\r\n            page : res.data.page,\r\n            pageSize : res.data.pageSize,\r\n            total : res.data.total\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this._getKinds();\r\n    }\r\n\r\n    async _handlerPagination(page){\r\n        this._getKinds(page);\r\n    }\r\n    \r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'Tên',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: 'Thời gian tạo',\r\n                dataIndex: 'created',\r\n            },\r\n            {\r\n                title: 'Thời gian chỉnh sửa',\r\n                dataIndex: 'modified',\r\n            },\r\n        ];\r\n        const kinds = this.state.kinds;\r\n\r\n        // rowSelection object indicates the need for row selection\r\n        const rowSelection = {\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n            },\r\n            getCheckboxProps: record => ({\r\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n                name: record.name,\r\n            }),\r\n        };\r\n\r\n        const Demo = () => {\r\n            const [selectionType, setSelectionType] = useState('checkbox');\r\n            const addContent = (<div>\r\n                <br/>\r\n                <Form initialValues={{ remember: true }}>\r\n                    <FormItem\r\n                        label=\"Tên\"\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: 'Vui lòng nhập tên loại!' }]}\r\n                    >\r\n                        <Input />\r\n                    </FormItem>\r\n                    <FormItem>\r\n                    <Button htmlType=\"submit\" type=\"primary\" style={{marginLeft :'92px' }}>Lưu</Button>\r\n                    </FormItem>\r\n                    \r\n                </Form>\r\n            </div>)\r\n\r\n            const {page, total} = this.state;\r\n\r\n            return (\r\n                <div>\r\n                    <Radio.Group\r\n                        onChange={({ target: { value } }) => {\r\n                            setSelectionType(value);\r\n                        }}\r\n                        value={selectionType}\r\n                    >\r\n                        <Radio value=\"checkbox\">Checkbox</Radio>\r\n                        <Radio value=\"radio\">radio</Radio>\r\n                    </Radio.Group>\r\n                    <ButtonGroup style={{ float: 'right' }}>\r\n                        <Space>\r\n                            <Popover placement=\"bottomLeft\" content={addContent}>\r\n                                <Button type=\"primary\">Tạo mới loại</Button>\r\n                            </Popover>\r\n\r\n\r\n                            <Button type=\"dashed\">Xóa</Button>\r\n                        </Space>\r\n                    </ButtonGroup>\r\n\r\n\r\n                    <Divider />\r\n\r\n                    <Table\r\n                        rowSelection={{\r\n                            type: selectionType,\r\n                            ...rowSelection,\r\n                        }}\r\n                        columns={columns}\r\n                        dataSource={kinds}\r\n                        pagination = {false}\r\n                    />\r\n\r\n                    <div>\r\n                        <Pagination defaultCurrent={page} total={total} pageSize={PAGE_SIZE}\r\n                        onChange = {(page) => this._handlerPagination(page)}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n\r\n\r\n        return (\r\n            <Demo />\r\n        )\r\n    }\r\n\r\n}","import React, { Component, useState } from 'react';\r\nimport Request from '../../service/Request';\r\nimport Pagination from '../../component/Pagination';\r\nimport { Table } from 'antd';\r\nconst PAGE_SIZE = 5;\r\n\r\nexport default class User extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            page : 1,\r\n            size : 5,\r\n            total : 0,\r\n            isLoading: true,\r\n            resStatus: null\r\n        }\r\n        this._getUsers = this._getUsers.bind(this);\r\n    }\r\n    async _getUsers(page = 1){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': true,\r\n            },\r\n            mode: 'cors'\r\n        };\r\n\r\n        const res = await Request.get('api/v1/users',{page: page, size: PAGE_SIZE});\r\n        console.log(res);\r\n        this.setState({\r\n            users: res.data.content,\r\n            page : res.data.page,\r\n            pageSize : res.data.pageSize,\r\n            total : res.data.total\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this._getUsers();\r\n    }\r\n\r\n    async _handlerPagination(page){\r\n        this._getUsers(page);\r\n    }\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: 'Tên',\r\n                dataIndex: 'fullName',\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: 'Ngày sinh',\r\n                dataIndex: 'dob',\r\n            },\r\n            {\r\n                title: 'Thời gian tạo',\r\n                dataIndex: 'created',\r\n            },\r\n            {\r\n                title: 'Thời gian chỉnh sửa',\r\n                dataIndex: 'modified',\r\n            },\r\n        ];\r\n        const users = this.state.users;\r\n        const {page = 1, total} = this.state;\r\n        console.log(page)\r\n\r\n\r\n        return(\r\n            <div>\r\n                <Table\r\n                        columns={columns}\r\n                        dataSource={users}\r\n                        pagination = {false}\r\n                    />\r\n\r\n                    <div>\r\n                        <Pagination current={page} total={total} pageSize={PAGE_SIZE}\r\n                        onChange = {(page) => this._handlerPagination(page)}/>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","\r\nexport default class Storage{\r\n    \r\n\r\n    static get(key, defaultValue = null) {\r\n        \r\n        let value = localStorage.getItem(key) || defaultValue\r\n    \r\n        if (value) {\r\n          try {\r\n            value = JSON.parse(value)\r\n          } catch (error) {\r\n            value = defaultValue\r\n          }\r\n        }\r\n    \r\n        return value\r\n      }\r\n    \r\n      static has(key) {\r\n        return localStorage.getItem(key) !== null\r\n      }\r\n    \r\n      static set(key, value) {\r\n        value = JSON.stringify(value)\r\n    \r\n        localStorage.setItem(key, value)\r\n      }\r\n    \r\n      static remove(key) {\r\n        localStorage.removeItem(key)\r\n      }\r\n    \r\n      static clear() {\r\n        localStorage.clear()\r\n      }\r\n      static removeBranchInvoice(branchId = 0){\r\n        if(branchId != 0){\r\n          var invoiceArrayUpdate = Storage.get('invoiceArray');\r\n        invoiceArrayUpdate.map((invoice, index) => {\r\n            if (invoice.branchId === branchId) {\r\n                invoiceArrayUpdate.splice(index, 1);\r\n            }\r\n        })\r\n\r\n        if (!invoiceArrayUpdate.length) {\r\n            Storage.remove('invoiceArray');\r\n        }\r\n\r\n        localStorage.setItem('invoiceArray', JSON.stringify(invoiceArrayUpdate));\r\n        }\r\n\r\n\r\n      }\r\n\r\n      static addToInvoice(itemId, name, branchId, branchName, image, price, quantity = 1 ){\r\n        var invoiceArray = [];\r\n        let flag = 0;\r\n        if(Storage.has('invoiceArray')){\r\n            invoiceArray = Storage.get('invoiceArray');\r\n        }\r\n        invoiceArray.map(\r\n            invoice => {\r\n                console.log(invoice.invoiceLines)\r\n                if(invoice.branchId == branchId){\r\n                    flag = 1;\r\n                    let flag2 = 0;\r\n                    \r\n\r\n                    invoice.invoiceLines.map(invoiceLine => {\r\n                        if(invoiceLine.itemId && invoiceLine.itemId === itemId){\r\n                            flag2 = 1;\r\n                            invoiceLine.quantity += quantity;\r\n                        }\r\n                        \r\n                    })\r\n                    if(flag2 == 0){\r\n                        var newInvoiceLine = {\r\n                            itemId: itemId,\r\n                            name: name,\r\n                            branchId: branchId,\r\n                            branchName: branchName,\r\n                            image: image,\r\n                            price: price,\r\n                            quantity : quantity\r\n                        }\r\n                        invoice.invoiceLines.push(newInvoiceLine);\r\n                    }\r\n                }\r\n            }\r\n         )\r\n\r\n        if(flag === 0){\r\n            var newInvoice = {\r\n                branchId: branchId,\r\n                branchName: branchName,\r\n                invoiceLines: [{\r\n                    itemId: itemId,\r\n                    name: name,\r\n                    branchId: branchId,\r\n                    branchName: branchName,\r\n                    image: image,\r\n                    price: price,\r\n                    quantity : quantity\r\n                }\r\n            ]\r\n            }\r\n            invoiceArray.push(newInvoice)\r\n        }\r\n\r\n        flag = 0;\r\n\r\n            \r\n\r\n            localStorage.setItem('invoiceArray', JSON.stringify(invoiceArray));\r\n        \r\n    }\r\n}","import Request from \"./Request\";\r\nimport { data } from \"jquery\";\r\n\r\nexport default class API{\r\n    static async getCurrentUser(){\r\n        return await Request.get('api/v1/users/currents');\r\n    }\r\n\r\n    static async getCurrentRole(){\r\n        const res = await Request.get('api/v1/users/currents');\r\n        if(res.code && res.code == 200)\r\n        return res.data.role;\r\n        return null;\r\n    }\r\n    static async isCustomer(){\r\n        const res = await Request.get('api/v1/users/currents');\r\n        if(res.code && res.code == 200)\r\n        return res.data.role === 'ROLE_CUSTOMER';\r\n        return false;\r\n    }\r\n    \r\n\r\n    static async getCurrentId(){\r\n        const res = await Request.get('api/v1/users/currents');\r\n        if(res.code && res.code == 200)\r\n        return res.data.id;\r\n        return null;\r\n    }\r\n\r\n    static async getAllInvoiceManager(id, filter = '', page = 1, size = 5){\r\n        const res = await Request.get('api/v1/invoices/managers/'+id, {page: page, filter: filter, size: size});\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async getAllInvoiceCustomer(id, page = 1, size = 5){\r\n        const res = await Request.get('api/v1/invoices/users/'+id, {page: page, size: size});\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async getAllInvoicePreparingForShipper(page = 1, size = 5){\r\n        const res = await Request.get('api/v1/invoices/preparing', {page: page, size: size});\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n    static async getAllInvoiceOfShipper(id, page = 1, size = 5){\r\n        const res = await Request.get('api/v1/invoices/shippers/'+id, {page: page, size: size});\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async createInvoiceCustomer(data){\r\n        const res = await Request.post('api/v1/invoices',data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async cancelInvoiceCustomer(id){\r\n        let data = {\r\n            id: id,\r\n            status: \"FAILED\"\r\n        }\r\n        const res = await Request.put('api/v1/invoices/changeStatus',data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n    static async setInvoiceFail(id){\r\n        const res = await Request.put('api/v1/invoices/fail/'+id);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async confirmInvoiceCustomer(id){\r\n        let data = {\r\n            id: id,\r\n            status: \"PREPARING\"\r\n        }\r\n        const res = await Request.put('api/v1/invoices/changeStatus',data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async confirmInvoiceByShipper(invoiceId, shipperId ){\r\n        let data = {\r\n            id: invoiceId,\r\n            shipperId: shipperId,\r\n            status: \"DELIVERING\"\r\n        }\r\n        const res = await Request.put('api/v1/invoices/changeStatusByShipper',data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async setSuccessInvoiceCustomer(id){\r\n        let data = {\r\n            id: id,\r\n            status: \"SUCCESSFULLY\"\r\n        }\r\n        const res = await Request.put('api/v1/invoices/changeStatus',data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n    static async purchaseSuccessInvoiceCustomer(id){\r\n        let data = {\r\n            id: id,\r\n            method: \"ZALOPAY\"\r\n        }\r\n        const res = await Request.put('api/v1/invoices/success',data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async rateBranch(branchId, userId, evaluate){\r\n        const res = await Request.post('api/v1/branchs/evaluation', null, {branchId: branchId, userId: userId, evaluate: evaluate});\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async rateItem(itemId, userId, evaluate){\r\n        const res = await Request.post('api/v1/items/evaluation', null, {itemId: itemId, userId: userId, evaluate: evaluate});\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async commentItem(itemId, userId, content){\r\n        const res = await Request.post('api/v1/items/comment', null, {itemId: itemId, userId: userId, content: content});\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async getItemDetails(id){\r\n        const res = await Request.get('api/v1/items/'+id);\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async getTopItems(){\r\n        const res = await Request.get('api/v1/items/tops');\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async searchItems(name = '', page = 1, size = 20){\r\n        const res = await Request.get('api/v1/items/search',{name: name, page: page, size: size});\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async getLastModifiedBranchs(){\r\n        const res = await Request.get('api/v1/branchs');\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async getBranchByManagerId(id, page = 1){\r\n        const res = await Request.get('api/v1/branchs/managers/'+id, {page:page});\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n    static async getBranchByManagerIdForSelect(id){\r\n        const res = await Request.get('api/v1/branchs/managers/v2/'+id);\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async getAllKindForSelect(id){\r\n        const res = await Request.get('api/v1/kinds/v2/');\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async getItemByManagerId(id, page = 1){\r\n        const res = await Request.get('api/v1/items/managers/'+id, {page:page});\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n    static async testUpload(file){\r\n        const formData = new FormData();\r\n        formData.append('image',file)\r\n        const res = await Request.postFormData('api/v1/items/upload', formData);\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async addNewBranch(name, address, description, phone, timeOpen, timeClose, image, managerId){\r\n        const formData = new FormData();\r\n        formData.append('name',name)\r\n        formData.append('address',address)\r\n        formData.append('description',description)\r\n        formData.append('phone',phone)\r\n        formData.append('timeOpen',timeOpen)\r\n        formData.append('timeClose',timeClose)\r\n        formData.append('image',image)\r\n        formData.append('managerId',managerId)\r\n        const res = await Request.postFormData('api/v1/branchs', formData);\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n\r\n    static async addNewItem(name, price, branchId, kindId, description, image){\r\n        const formData = new FormData();\r\n        formData.append('name',name)\r\n        formData.append('price',price)\r\n        formData.append('branchId',branchId)\r\n        formData.append('kindId',kindId)\r\n        formData.append('description',description)\r\n        formData.append('image',image)\r\n        const res = await Request.postFormData('api/v1/items', formData);\r\n        if(res.code && res.code == 200)\r\n        return res.data;\r\n        return null;\r\n    }\r\n    static async deleteBranch(id){\r\n        let data = {\r\n            ids: [id]\r\n        }\r\n        const res = await Request.delete('api/v1/branchs/',data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n    static async createOrder(id){\r\n        const res = await Request.get('api/v1/invoices/orders/'+id);\r\n        if(res.code && res.code == 200)\r\n        {\r\n            let data = res.data;\r\n            console.log(data)\r\n            const res2 = await Request.postOrder('https://sb-openapi.zalopay.vn/v2/create', data)\r\n            return res2;\r\n        }\r\n        return null;\r\n       \r\n    }\r\n\r\n    static async checksum(amount, discountamount, appid, checksum, apptransid, pmcid, bankcode, status ){\r\n        let data = {\r\n            amount : amount,\r\n            discountamount : discountamount,\r\n            app_id : appid,\r\n            checksum : checksum,\r\n            app_trans_id : apptransid,\r\n            pmcid : pmcid,\r\n            bank_code : bankcode,\r\n            status : status\r\n\r\n        }\r\n        const res = await Request.post('api/v1/invoices/orders/',null, data);\r\n        if(res.code && res.code == 200)\r\n        return res;\r\n        return null;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import React, { Component } from 'react';\r\nimport { FormControl, Navbar, Form, Nav } from 'react-bootstrap';\r\nimport './NavCustom.css';\r\nimport { Layout, Menu, Button, Row, Col } from 'antd';\r\nimport MenuItem from 'antd/lib/menu/MenuItem';\r\nimport { Link } from 'react-router-dom';\r\nimport Text from 'antd/lib/typography/Text';\r\nimport Storage from '../util/Storage';\r\nimport API from '../service/API';\r\nimport Request from '../service/Request';\r\nimport history from '../util/History';\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nclass NavCustom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: '',\r\n            user: '',\r\n            loading: false\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        if (Storage.has('accessToken')) {\r\n            Request.setAccessToken(Storage.get('accessToken'));\r\n            const res = await API.getCurrentUser();\r\n            console.log(res);\r\n            if (res.code == 200) {\r\n                this.setState({\r\n                    role: res.data.role,\r\n                    user: res.data.fullName,\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    _handlerSingout() {\r\n        Storage.remove('accessToken');\r\n        Storage.remove('invoiceArray');\r\n        Request.removeAccessToken();\r\n        window.location.href='/';\r\n        // history.push('/');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { role, user } = this.state;\r\n        console.log(role + ' ' + user);\r\n\r\n        var redirectName = '';\r\n        var helloToUser = '';\r\n        if (role) {\r\n            switch (role) {\r\n                case 'ROLE_MANAGER': redirectName = (<Menu.Item className=\"menu-item\" key=\"3\" style={{ float: 'right' }}><Link to='/managers'>Trang quản lý</Link></Menu.Item>);\r\n                    break;\r\n                case 'ROLE_ADMIN': redirectName = (<Menu.Item className=\"menu-item\" key=\"3\" style={{ float: 'right' }}><Link to='/admins'>Trang quản trị</Link></Menu.Item>);\r\n                    break;\r\n                case 'ROLE_CUSTOMER': redirectName = (<Menu.Item className=\"menu-item\" key=\"3\" style={{ float: 'right' }}><Link to='/invoices-history'>Lịch sử mua</Link></Menu.Item>);\r\n                    break;\r\n                case '': redirectName = '';\r\n                    break;\r\n                case 'ROLE_SHIPPER': redirectName = (<Menu.Item className=\"menu-item\" key=\"3\" style={{ float: 'right' }}><Link to='/shippers'>Trang quản lý</Link></Menu.Item>);\r\n                    break;\r\n                default: redirectName = '';\r\n            }\r\n        }\r\n        if (user) helloToUser = 'Xin chào ' + user;\r\n\r\n\r\n        const singinStatus = Storage.has('accessToken')\r\n            ? (<Button onClick={() => this._handlerSingout()} >Đăng xuất</Button>)\r\n            : (<Link to='/singin'><Button  >Đăng nhập</Button></Link>);\r\n        return (\r\n            <Row>\r\n                <Col  xs ={0} md ={8}>\r\n                <Menu className='font-size-menu' theme=\"dark\" mode=\"horizontal\">\r\n                    <Menu.Item>{helloToUser}</Menu.Item>\r\n                </Menu>\r\n                </Col>\r\n                \r\n                <Col  xs ={24} md ={16}>\r\n                    <Menu className='font-size-menu' theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['3']}>\r\n\r\n                        <Menu.Item style={{ float: 'right' }}>{singinStatus}</Menu.Item>\r\n                        {redirectName}\r\n                    </Menu>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default NavCustom;","import React, { Component, useState } from 'react';\r\nimport { Table, Radio, Divider, Button, Space, Collapse, Popover, Input } from 'antd';\r\nimport nprogress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nimport Axios from 'axios';\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\nimport Form from 'antd/lib/form/Form';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport Pagination from './Pagination';\r\nimport Request from '../service/Request';\r\n\r\nconst PAGE_SIZE = 5;\r\nexport default class Test extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            kinds: [],\r\n            page : 1,\r\n            size : 5,\r\n            total : 0,\r\n            isLoading: true,\r\n            resStatus: null\r\n        }\r\n        this._getKinds = this._getKinds.bind(this);\r\n    }\r\n\r\n    async _getKinds(page = 1){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': true,\r\n            },\r\n            mode: 'cors'\r\n        };\r\n\r\n        const res = await Request.get('api/v1/kinds',{page: page, size: PAGE_SIZE});\r\n        console.log(res);\r\n        this.setState({\r\n            kinds: res.data.content,\r\n            page : res.data.page,\r\n            pageSize : res.data.pageSize,\r\n            total : res.data.total\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this._getKinds();\r\n    }\r\n\r\n    async _handlerPagination(page){\r\n        this._getKinds(page);\r\n    }\r\n    \r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: 'Created',\r\n                dataIndex: 'created',\r\n            },\r\n            {\r\n                title: 'Modified',\r\n                dataIndex: 'modified',\r\n            },\r\n        ];\r\n        const kinds = this.state.kinds;\r\n\r\n        // rowSelection object indicates the need for row selection\r\n        const rowSelection = {\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n            },\r\n            getCheckboxProps: record => ({\r\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n                name: record.name,\r\n            }),\r\n        };\r\n\r\n        const Demo = () => {\r\n            const [selectionType, setSelectionType] = useState('checkbox');\r\n            const addContent = (<div>\r\n                <br/>\r\n                <Form initialValues={{ remember: true }}>\r\n                    <FormItem\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: 'Please input kind name!' }]}\r\n                    >\r\n                        <Input />\r\n                    </FormItem>\r\n                    <FormItem>\r\n                    <Button htmlType=\"submit\" type=\"primary\" style={{marginLeft :'92px' }}>Save</Button>\r\n                    </FormItem>\r\n                    \r\n                </Form>\r\n            </div>)\r\n\r\n            const {page, total} = this.state;\r\n\r\n            return (\r\n                <div>\r\n                    <Radio.Group\r\n                        onChange={({ target: { value } }) => {\r\n                            setSelectionType(value);\r\n                        }}\r\n                        value={selectionType}\r\n                    >\r\n                        <Radio value=\"checkbox\">Checkbox</Radio>\r\n                        <Radio value=\"radio\">radio</Radio>\r\n                    </Radio.Group>\r\n                    <ButtonGroup style={{ float: 'right' }}>\r\n                        <Space>\r\n                            <Popover placement=\"bottomLeft\" content={addContent}>\r\n                                <Button type=\"primary\">Add new Kind</Button>\r\n                            </Popover>\r\n\r\n\r\n                            <Button type=\"dashed\">Delete</Button>\r\n                        </Space>\r\n                    </ButtonGroup>\r\n\r\n\r\n                    <Divider />\r\n\r\n                    <Table\r\n                        rowSelection={{\r\n                            type: selectionType,\r\n                            ...rowSelection,\r\n                        }}\r\n                        columns={columns}\r\n                        dataSource={kinds}\r\n                        pagination = {false}\r\n                    />\r\n\r\n                    <div>\r\n                        <Pagination defaultCurrent={page} total={total} pageSize={PAGE_SIZE}\r\n                        onChange = {(page) => this._handlerPagination(page)}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n\r\n\r\n        return (\r\n            <Demo />\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Layout, Row, Col } from \"antd\";\r\nimport { Link } from 'react-router-dom';\r\nimport Text from 'antd/lib/typography/Text';\r\nconst { Header } = Layout;\r\n\r\nexport default class HeaderCustom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { trigger, navbar } = this.props;\r\n\r\n        var showHeader = trigger\r\n        ? (<div>\r\n            <Header className=\"header pl-0 pr-0 nav-custom\" style={{}} >\r\n                <Row style ={{height:'100%'}}>\r\n                    <Col span ={2} style ={{height:'100%'}}>\r\n                    {trigger}\r\n                    </Col>\r\n                    <Col xs = {10} md ={5} style ={{height:'100%'}}><div className=\"logo\"><Link to='/'><Text className=\"logo-title\" style={{ fontSize: 26}}>FFD - Client</Text></Link></div></Col>\r\n                    <Col xs ={12} md ={17}>\r\n                    {navbar}\r\n                    </Col>\r\n                </Row>\r\n            </Header>\r\n            <div className=\"main\"></div>\r\n\r\n        </div>)\r\n        : (<div>\r\n            <Header className=\"header pl-0 pr-0 nav-custom\" style={{}} >\r\n                <Row style ={{height:'100%'}}>\r\n                    <Col xs = {10} md ={5} style ={{height:'100%'}}><div className=\"logo\"><Link to='/'><Text className=\"logo-title\" style={{ fontSize: 26}}>FFD - Client</Text></Link></div></Col>\r\n                    <Col xs ={14} md ={19}>\r\n                    {navbar}\r\n                    </Col>\r\n                </Row>\r\n            </Header>\r\n            <div className=\"main\"></div>\r\n\r\n        </div>);\r\n\r\n        return (<div>\r\n            {showHeader}\r\n        </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Admin.css'\r\nimport { Layout, Breadcrumb, Menu, Button } from 'antd';\r\nimport Icon, { LaptopOutlined, BranchesOutlined, MenuUnfoldOutlined, MenuFoldOutlined, StepForwardOutlined, UserOutlined } from '@ant-design/icons';\r\nimport Kind from './Kind';\r\nimport User from './User';\r\nimport { Link } from 'react-router-dom';\r\nimport Text from 'antd/lib/typography/Text';\r\nimport nProgress from 'nprogress';\r\nimport 'nprogress/nprogress.css'\r\nimport NavCustom from '../../component/NavCustom';\r\nimport 'antd/dist/antd.css';\r\nimport Test from '../../component/Test';\r\nimport HeaderCustom from '../../component/HeaderCustom';\r\nconst SubMenu = Menu.SubMenu;\r\nconst { Content, Sider } = Layout;\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contents: <User />,\r\n      collapsed: false,\r\n    }\r\n    this._onClickMenu = this._onClickMenu.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      contents: <User />\r\n    })\r\n  }\r\n\r\n  toggle(){\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  toggle2(){\r\n      console.log(window.innerWidth)\r\n      if(window.innerWidth < 638){\r\n        this.setState({\r\n          collapsed: true,\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n          collapsed: false,\r\n        });\r\n      }\r\n\r\n  };\r\n\r\n  async _onClickMenu(Comp) {\r\n    nProgress.start();\r\n    this.setState({\r\n      contents: <Comp />\r\n    })\r\n    nProgress.done();\r\n  }\r\n\r\n\r\n  render() {\r\n    const contents = this.state.contents;\r\n    console.log(contents);\r\n    const trigger = (this.state.collapsed)\r\n      ? <Menu mode=\"inline\" theme = {'dark'}\r\n      style={{height:'100%', width:80}}>\r\n        <MenuUnfoldOutlined\r\n        className='trigger'\r\n        onClick={()=>this.toggle()}\r\n        style={{\r\n          marginTop: 16,\r\n          marginBottom:'auto',\r\n          marginLeft:5,\r\n          color:'#fff',\r\n          fontSize:30,\r\n          display: 'block'\r\n        }}\r\n\r\n      />\r\n    </Menu> \r\n      \r\n      \r\n      : <Menu mode=\"inline\" theme = {'dark'}\r\n      style={{height:'100%',width:80}}>\r\n        <MenuFoldOutlined\r\n        className='trigger'\r\n        onClick={()=>this.toggle()}\r\n        style={{\r\n          marginTop: 16,\r\n          marginBottom:'auto',\r\n          marginLeft:5,\r\n          color:'#fff',\r\n          fontSize:30,\r\n          display: 'block'\r\n        }}\r\n\r\n      />\r\n    </Menu> \r\n    return (\r\n      <div>\r\n        <HeaderCustom trigger={trigger} navbar={<NavCustom />} />\r\n\r\n        <Layout className=\"main-layout\" style={{ border: '4px #f0f2f5 solid' }}>\r\n          <Sider theme ='light' width={230} breakpoint='md' onBreakpoint={()=>this.toggle2()} trigger={null} collapsible collapsed={this.state.collapsed} className=\"site-layout-background\">\r\n            <Menu className=\"menu-custom\"\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={['1']}\r\n              defaultOpenKeys={['sub1']}\r\n              style={{ height: '100%', borderRight: 0 }}\r\n            >\r\n              <SubMenu onTitleClick={() => this._onClickMenu(User)}\r\n                key=\"sub1\"\r\n                icon={<UserOutlined className='font-size-menu' />}\r\n                title={\r\n                  <span className='font-size-menu'>\r\n                    Người dùng\r\n              </span>\r\n                }\r\n              >\r\n                <Menu.Item className='font-size-sub-menu' key=\"1\">\r\n\r\n                  <Link to='/'>Tất cả</Link></Menu.Item>\r\n                <Menu.Item className='font-size-sub-menu' key=\"2\">Bị khóa</Menu.Item>\r\n                <Menu.Item className='font-size-sub-menu' key=\"3\">Quản lý</Menu.Item>\r\n                <Menu.Item className='font-size-sub-menu' key=\"4\">Người giao hàng</Menu.Item>\r\n                <Menu.Item className='font-size-sub-menu' key=\"5\">Khách hàng</Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu onTitleClick={() => this._onClickMenu(Kind)}\r\n                key=\"sub2\"\r\n                icon={<LaptopOutlined className='font-size-menu' />}\r\n                title={\r\n                  <span className='font-size-menu'>\r\n                    Loại sản phẩm\r\n              </span>\r\n                }\r\n              >\r\n                <Menu.Item className='font-size-sub-menu' key=\"6\">Tất cả</Menu.Item>\r\n                <Menu.Item className='font-size-sub-menu' key=\"67\">Bị Khóa</Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu onTitleClick={() => this._onClickMenu(User)}\r\n                key=\"sub3\"\r\n                icon={<BranchesOutlined className='font-size-menu' style={{ marginBottom: '2px' }} />}\r\n                title={\r\n                  <span className='font-size-menu'>\r\n\r\n                    Cửa hàng\r\n              </span>\r\n                }\r\n              >\r\n                <Menu.Item className='font-size-sub-menu' key=\"8\">Tất cả</Menu.Item>\r\n                <Menu.Item className='font-size-sub-menu' key=\"9\">Nổi bật</Menu.Item>\r\n                <Menu.Item className='font-size-sub-menu' key=\"10\">Bị Khóa</Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout style={{ padding: 0 }} className=\"site-layout\">\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              {contents}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Admin;","import React,  {Component} from 'react'\r\nimport nprogress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nimport { Route } from 'react-router-dom'\r\n\r\nclass LoadRoute extends Component {\r\n  componentWillMount () {\r\n    nprogress.start()\r\n  }\r\n\r\n  componentDidMount () {\r\n    nprogress.done()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Route {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoadRoute","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Button, Input, Row, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Text from \"antd/lib/typography/Text\";\r\nimport Form from \"antd/lib/form/Form\";\r\nimport FormItem from \"antd/lib/form/FormItem\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport history from \"../util/History\";\r\nconst { Header } = Layout;\r\n\r\nclass SubNavbar extends Component {\r\n\r\n    onSearch(name){\r\n       window.location.href = '/search?name='+name;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <div>\r\n                   <Row className  = \"subnavbar-custom\">\r\n                       <Col xs = {0} md = {3} className = \"bg-subnavbar\">\r\n                       </Col>\r\n                       <Col xs = {24} md = {9}>\r\n                       <Menu style = {{width:\"100%\", paddingRight:\"2.5rem\", paddingLeft:\"2.5rem\"}} className='font-size-menu bg-subnavbar' theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} >\r\n                            <Menu.Item style = {{width:\"25%\"}} className=\"menu-item\" key=\"1\"><Link to ='/branchs'>Cửa hàng</Link></Menu.Item>\r\n                            <Menu.Item style = {{width:\"25%\"}} className=\"menu-item\" key=\"2\"><Link to ='/'>Nổi bật</Link></Menu.Item>\r\n                            {/* <Menu.Item style = {{width:\"25%\"}} className=\"menu-item\" key=\"3\"><Link to ='/invoices'>Giảm giá</Link></Menu.Item> */}\r\n                            <Menu.Item style = {{width:\"25%\"}} className=\"menu-item\" key=\"4\"> <Link to ='/invoices'>Giỏ hàng</Link></Menu.Item>\r\n                        </Menu>\r\n                       </Col>\r\n                       <Col xs = {24} md = {9}>\r\n                       <Menu style = {{width:\"100%\", paddingLeft:\"1.5rem\", paddingRight:\"1.5rem\"}} className='font-size-menu bg-subnavbar' theme=\"dark\" mode=\"horizontal\" >\r\n                            <Menu.Item style = {{width:\"100%\"}} className=\"menu-item\"  >\r\n                                <Search\r\n                                    placeholder=\"tìm kiếm\"\r\n                                    onSearch={value => this.onSearch(value)}\r\n                                    style={{ width: '100%', paddingLeft: 15}}\r\n                                />\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                       </Col>\r\n                       <Col xs = {0} md = {3} className = \"bg-subnavbar\">\r\n\r\n                       </Col>\r\n                   </Row>\r\n                </div>\r\n                <div style={{ paddingTop: 100 }}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SubNavbar;","import React, { Component } from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport Axios from \"axios\";\r\nimport { Row, Col, Card, Carousel, Divider } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport SubNavbar from \"./SubNavBar\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport API from \"../service/API\";\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport Item from \"antd/lib/list/Item\";\r\nimport history from \"../util/History\";\r\nimport { Button } from \"react-bootstrap\";\r\nexport default class Wellcome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            branchs: [],\r\n            isLoading: true,\r\n            resStatus: null\r\n        }\r\n        this.loadComponent = this.loadComponent.bind(this);\r\n        this._onClickBranch = this._onClickBranch.bind(this);\r\n        this._onClickItem = this._onClickItem.bind(this);\r\n    }\r\n\r\n    async loadComponent() {\r\n        const items = await API.getTopItems();\r\n        const branchs = await API.getLastModifiedBranchs();\r\n\r\n        this.setState({\r\n            items: items,\r\n            branchs: branchs.content\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.loadComponent();\r\n\r\n    }\r\n\r\n    _onClickItem(id){\r\n        history.push('/items?id='+id);\r\n    }\r\n    _onClickBranch(id){\r\n        history.push('/branchs-details?id='+id);\r\n    }\r\n    async testOrder(id){\r\n        const res = await API.createOrder(id);\r\n        console.log(res)\r\n    }\r\n    render() {\r\n        // const showImage = <img style={{width:200,height:130}} src={`data:image/jpg;base64,${image.picByte}`} />\r\n        const { items, branchs } = this.state;\r\n        console.log(items)\r\n        console.log(branchs)\r\n\r\n        let showOwlCarouselBranchs = '';\r\n        if (branchs.length != 0) {\r\n            showOwlCarouselBranchs = (\r\n                <OwlCarousel\r\n                    className=\"owl-theme\"\r\n                    loop\r\n                    items={3} margin={8} autoplay={true} autoplayTimeout={3000}\r\n                >\r\n                    {branchs.map(branch => (\r\n                        <div className=\"item\" key={branch.id}>\r\n                            <Card hoverable onClick = {() => this._onClickBranch(branch.id)}\r\n                                cover={<img style={{ width: \"100%\", height: 130 }} src={`data:image/jpg;base64,${branch.image.picByte}`} />}\r\n                            >\r\n                                {branch.name}\r\n                            </Card>\r\n                        </div>\r\n                    ))}\r\n                </OwlCarousel>\r\n            )\r\n        }\r\n\r\n        let showOwlCarouselItems = '';\r\n        if (items.length != 0) {\r\n            showOwlCarouselItems = (\r\n                <OwlCarousel\r\n                    className=\"owl-theme\"\r\n                    loop\r\n                    items={2} margin={8} autoplay={true} autoplayTimeout={5000}\r\n                    dots={false}\r\n                >\r\n                    {items.map(item => (\r\n                        <div className=\"item\" key={item.id}>\r\n                            <img onClick = {() => this._onClickItem(item.id)} style={{ width: \"100%\", height: 150 }} src={`data:image/jpg;base64,${item.image.picByte}`} />\r\n                        </div>\r\n                    ))}\r\n                </OwlCarousel>\r\n\r\n            )\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <HeaderCustom navbar={<NavCustom />} />\r\n                <SubNavbar />\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <Row>\r\n                        <Col xs = {0} md ={1} ></Col>\r\n                        <Col xs = {24} md ={10}>\r\n                            <div>\r\n                                <Title style={{ fontSize: 40 }} >FAST FOOD DELIVERY</Title>\r\n                                <br />\r\n                                <span style ={{color:\"black\", textShadow: '6px 2px 8px rgba(15,206,145,0.39)', fontSize:'5em', fontFamily:\"'Roboto Mono', monospace\"}}>FFD</span>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <Title style={{ fontSize: 18 }} > HỆ THỐNG DỊCH VỤ THỨC ĂN NHANH PHẠM VI TT - HUẾ</Title>\r\n                                <br />\r\n                                <Title style={{ fontSize: 15 }} > Hỗ trợ: 0*** *** ***</Title>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs = {0} md ={1} ></Col>\r\n                        <Col xs = {24} md ={10}>\r\n                            <Row>\r\n                                <Divider orientation=\"left\" style={{marginTop:0}}>Cửa hàng</Divider>\r\n                                {showOwlCarouselBranchs}\r\n\r\n                            </Row>\r\n                            <Row>\r\n                            <Divider orientation=\"left\">Món được yêu thích</Divider>\r\n                                <Col style={{ width: '100%' }}>\r\n                                    {showOwlCarouselItems}\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Col>\r\n                        <Col xs = {0} md ={2} ></Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { PAGE_SIZE_BRANCH } from \"../constant/APIConstant\";\r\nimport { Table, Row, Col, Card } from \"antd\";\r\nimport Request from \"../service/Request\";\r\nimport Pagination from \"./Pagination\";\r\nimport { Meta } from \"antd/lib/list/Item\";\r\nimport { Redirect } from \"react-router\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport SubNavbar from \"./SubNavBar\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\n\r\nexport default class Bracnh extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            branchs: [],\r\n            page : 1,\r\n            size : 5,\r\n            total : 0,\r\n            redirectPath: null,\r\n            resStatus: null\r\n        }\r\n        this._getBranchs = this._getBranchs.bind(this);\r\n        this._handlerClickBranch = this._handlerClickBranch.bind(this);\r\n        this._handlerPagination = this._handlerPagination.bind(this);\r\n    }\r\n    async _getBranchs(page = 1){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': true,\r\n            },\r\n            mode: 'cors'\r\n        };\r\n\r\n        const res = await Request.get('api/v1/branchs',{page: page, size: PAGE_SIZE_BRANCH});\r\n        console.log(res);\r\n        this.setState({\r\n            branchs: res.data.content,\r\n            page : res.data.page,\r\n            pageSize : res.data.pageSize,\r\n            total : res.data.total\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this._handlerPagination(1);\r\n    }\r\n\r\n    async _handlerPagination(page){\r\n        this._getBranchs(page);\r\n    }\r\n\r\n    _handlerClickBranch(id){\r\n        window.location.href = '/branchs-details?id='+id+'';\r\n        console.log(id);\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {redirectPath} = this.state;\r\n        if(redirectPath){\r\n            return <Redirect to={redirectPath} />\r\n        }\r\n        const columns = [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n            },\r\n           \r\n            {\r\n                title: 'Created',\r\n                dataIndex: 'created',\r\n            },\r\n            {\r\n                title: 'Modified',\r\n                dataIndex: 'modified',\r\n            },\r\n        ];\r\n        const branchs = this.state.branchs;\r\n        const {page = 1, total} = this.state;\r\n        console.log(page)\r\n\r\n        const listBranch = branchs.map(branch => {\r\n            return (\r\n                    <Col span = {6} key = {branch.id}>\r\n                    \r\n                    <Card hoverable\r\n                    onClick = {()=> this._handlerClickBranch(branch.id)}\r\n                     style ={{width:\"70%\", margin: \"auto\", marginBottom: 40 }}\r\n                   // width = {\"80%\"}\r\n                    cover ={<img style = {{width:'100%', height: '20vh'}} src={`data:image/jpg;base64,${branch.image.picByte}`} />}>\r\n                        <Meta title = {branch.name} />\r\n\r\n                    </Card>\r\n                    </Col>\r\n            )\r\n        }) \r\n\r\n    \r\n        console.log(listBranch);\r\n        return(\r\n            <div>\r\n                <HeaderCustom navbar ={<NavCustom />} />\r\n                <SubNavbar />\r\n                <Row>{listBranch}</Row>\r\n                    <div>\r\n                        <Pagination current ={page} total={total} pageSize={PAGE_SIZE_BRANCH}\r\n                        onChange = {(page) => this._handlerPagination(page)}/>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Button, Tooltip, Space, Rate, Badge, message } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport moment from \"moment\";\r\nimport { PAGE_SIZE_BRANCH_ITEMS } from \"../constant/APIConstant\";\r\nimport Request from \"../service/Request\";\r\nimport Pagination from \"./Pagination\";\r\nimport { EyeFilled, PlusCircleFilled } from '@ant-design/icons';\r\nimport SubNavbar from \"./SubNavBar\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport Storage from \"../util/Storage\";\r\nimport history from \"../util/History\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport API from \"../service/API\";\r\n\r\nexport default class BranchDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            branch: '',\r\n            branchId: 0,\r\n            branchImage: '',\r\n            branchItems: [],\r\n            page: 1,\r\n            size: 5,\r\n            total: 0,\r\n            redirectPath: null,\r\n            resStatus: null,\r\n            modal2Visible: false,\r\n            userId:0,\r\n            rateValue: 0,\r\n            rateSuccess: true,\r\n        }\r\n        this._getBranchItems = this._getBranchItems.bind(this);\r\n        this._handlerPagination = this._handlerPagination.bind(this);\r\n        this._getCurrentBranch = this._getCurrentBranch.bind(this);\r\n        this._getBranchState =this._getBranchState.bind(this);\r\n    }\r\n\r\n    async _getBranchItems(id = 0,page = 1) {\r\n\r\n        console.log(id)\r\n        if(id != 0) {\r\n            const res = await Request.get('api/v1/items/branchs/' + id.toLocaleString() + '', { page: page, size: PAGE_SIZE_BRANCH_ITEMS });\r\n            console.log(res);\r\n            this.setState({\r\n                branchItems: res.data.content,\r\n                page: res.data.page,\r\n                pageSize: res.data.pageSize,\r\n                total: res.data.total\r\n            })\r\n        }\r\n\r\n       \r\n    }\r\n    async _getCurrentBranch(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const id = query.get('id');\r\n        console.log(query.get('id'));\r\n\r\n        const res1 = await Request.get('api/v1/branchs/'+id);\r\n        this.setState({\r\n            rateSuccess:true,\r\n            branch : res1.data,\r\n            branchId: res1.data.id,\r\n            branchImage: res1.data.image\r\n        })\r\n        console.log(this.state.branch.image.name);\r\n        this._getBranchItems(res1.data.id);\r\n\r\n    }\r\n    async componentDidMount() {\r\n        this.setState({\r\n            rateValue:0\r\n        })\r\n        this._getCurrentBranch();\r\n        const userId = await API.getCurrentId();\r\n        if(userId != null){\r\n            this.setState({\r\n                userId : userId\r\n            })\r\n        }\r\n    }\r\n\r\n    async _handlerPagination(branchId, page) {\r\n        this._getBranchItems(branchId, page);\r\n    }\r\n\r\n    _handlerClickAddToInvoice(itemId,name, branchId, branchName, image, price, quantity = 1 ){\r\n        var invoiceArray = [];\r\n        let flag = 0;\r\n        if(Storage.has('invoiceArray')){\r\n            invoiceArray = Storage.get('invoiceArray');\r\n        }\r\n        invoiceArray.map(\r\n            invoice => {\r\n                console.log(invoice.invoiceLines)\r\n                if(invoice.branchId == branchId){\r\n                    flag = 1;\r\n                    let flag2 = 0;\r\n                    \r\n\r\n                    invoice.invoiceLines.map(invoiceLine => {\r\n                        if(invoiceLine.itemId && invoiceLine.itemId === itemId){\r\n                            flag2 = 1;\r\n                            invoiceLine.quantity += quantity;\r\n                        }\r\n                        \r\n                    })\r\n                    if(flag2 == 0){\r\n                        var newInvoiceLine = {\r\n                            itemId: itemId,\r\n                            name: name,\r\n                            branchId: branchId,\r\n                            branchName: branchName,\r\n                            image: image,\r\n                            price: price,\r\n                            quantity : quantity\r\n                        }\r\n                        invoice.invoiceLines.push(newInvoiceLine);\r\n                    }\r\n                }\r\n            }\r\n         )\r\n\r\n        if(flag === 0){\r\n            var newInvoice = {\r\n                branchId: branchId,\r\n                branchName: branchName,\r\n                invoiceLines: [{\r\n                    itemId: itemId,\r\n                    name: name,\r\n                    branchId: branchId,\r\n                    branchName: branchName,\r\n                    image: image,\r\n                    price: price,\r\n                    quantity : quantity\r\n                }\r\n            ]\r\n            }\r\n            invoiceArray.push(newInvoice)\r\n        }\r\n\r\n        flag = 0;\r\n\r\n            \r\n\r\n            localStorage.setItem('invoiceArray', JSON.stringify(invoiceArray));\r\n         \r\n\r\n\r\n\r\n\r\n\r\n        history.push('/invoices')\r\n        // window.location.href = '/invoices';\r\n    }\r\n\r\n    _handlerClickViewItem(id){\r\n        window.location.href = '/items?id=' + id;\r\n    }\r\n\r\n    _getBranchState(){\r\n        return this.state.branch;\r\n    }\r\n\r\n    setModal2Visible(modal2Visible) {\r\n        this.setState({ modal2Visible });\r\n      }\r\n\r\n    _handlerClickChangeRate(value){\r\n        this.setState({\r\n            rateValue: value\r\n        })\r\n    }\r\n    async _handlerClickSubmitRate(){\r\n        console.log(this.state.itemId, this.state.userId, this.state.rateValue);\r\n        if(this.state.rateValue != 0){\r\n            const res = await API.rateBranch(this.state.branchId, this.state.userId, this.state.rateValue);\r\n            if(res != null){\r\n                message.success(\"Thành công! Cảm ơn bạn đã đánh giá!\");\r\n                this._getCurrentBranch();\r\n            }\r\n            else{\r\n                message.error(\"Đánh giá không thành công! Vui lòng thử lại!\")\r\n            }\r\n        }\r\n        else{\r\n            message.error(\"Vui lòng nhập chọn điểm đánh giá!\")\r\n        }\r\n        this.setModal2Visible(false);\r\n    }\r\n    render() {\r\n        const {branch, branchImage, branchId, userId, rateSuccess} = this.state;\r\n        console.log(branch.totalEvaluation);\r\n\r\n        let showRateResult = (rateSuccess == false) \r\n        ? (<span style={{color:'red'}}>đánh giá không thành công</span>) \r\n        :'';\r\n\r\n        var showRateBranch;\r\n        if (userId != 0) {\r\n            showRateBranch = (\r\n                <div>\r\n                    <Button type=\"primary\" onClick={() => this.setModal2Visible(true)}>\r\n                        Đánh giá cửa hàng\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"Đánh giá cửa hàng\"\r\n                        centered\r\n                        visible={this.state.modal2Visible}\r\n                        onOk={() => this._handlerClickSubmitRate()}\r\n                        onCancel={() => this.setModal2Visible(false)}\r\n                    >\r\n                        <Rate style={{margin:'auto', display:'block'}} onChange = {(value)=> this._handlerClickChangeRate(value)}></Rate>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }else{\r\n            showRateBranch = '';\r\n        }\r\n\r\n      \r\n        let date = new Date();\r\n        const timeOpen = moment('2020-5-19 ' + branch.timeOpen);\r\n        const timeClose = moment('2020-5-19 ' + branch.timeClose);\r\n        const now = new Date();\r\n        const timeCurrent = moment('2020-5-19 ' + now.getHours().toLocaleString() + ':' + now.getMinutes().toLocaleString() + ':' + now.getSeconds().toLocaleString());\r\n        console.log(timeOpen.format('hh mm ss'));\r\n        var branchStatus = '';\r\n        if (timeCurrent >= timeOpen) {\r\n            if (timeCurrent < timeClose)\r\n                branchStatus = (<span className=\"branch-status\" style = {{fontSize:15}}><Badge status=\"success\" />đang hoạt động</span>);\r\n            else {\r\n                branchStatus = (<span className=\"branch-status\" style = {{fontSize:15}}><Badge status=\"default\" />đang đóng cửa</span>);\r\n            }\r\n        }\r\n        else {\r\n            branchStatus = (<span className=\"branch-status\" style = {{fontSize:15}}><Badge status=\"processing\" />sắp mở cửa</span>);\r\n        }\r\n\r\n\r\n        const listBranchItems = this.state.branchItems.map(branchItems => {\r\n            return (\r\n\r\n                <Card.Grid style={{ width: '100%' }} key ={branchItems.id}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <div style={{ width: \"25%\" }}>\r\n                            <img style={{ width: 120, height: 70, display: \"inline-block\" }} src={`data:image/jpg;base64,${branchItems.image.picByte}`} />\r\n                        </div>\r\n                        <div style={{ width: \"75%\", paddingLeft: 20, paddingRight: 0 }}>\r\n\r\n                            <Title style={{ fontSize: 18, marginBottom: 0 }}>{branchItems.name} <span style={{ float: \"right\", fontSize: 14, color: \"green\", fontStyle: \"italic\" }}>{(branchItems.status === 'ACTIVE') ? 'Còn sản phẩm' : 'Hết sản phẩm'}</span></Title>\r\n\r\n                            <Title style={{ fontSize: 13, marginBottom: 5, marginTop: 5 }} type={\"danger\"}>Giá: {branchItems.price}</Title>\r\n                            <Title style={{ fontSize: 13, margin: 0 }}>Mô tả: {branchItems.description.toLocaleString().substring(0, 10)}\r\n                                <span style={{ float: 'right' }}>\r\n                                    <Space>\r\n                                        <Tooltip title='Xem'>\r\n                                            <Button  onClick = {() => this._handlerClickViewItem(branchItems.id)}\r\n                                            type=\"primary\" size={'small'} shape=\"round\" icon={<EyeFilled style={{ display: 'inline-block', overflow: 'hidden' }} />} >\r\n\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                        <Tooltip title='Thêm vào giỏ'>\r\n                                            <Button  onClick = {() => this._handlerClickAddToInvoice(branchItems.id,branchItems.name,branch.id, branch.name, branchItems.image.picByte, branchItems.price, 1)} \r\n                                            type=\"primary\" size={'small'} shape=\"round\" icon={<PlusCircleFilled style={{ display: 'inline-block', overflow: 'hidden' }} />} >\r\n\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Space>\r\n                                </span>\r\n                            </Title>\r\n                        </div>\r\n                    </div>\r\n                </Card.Grid>\r\n\r\n            )\r\n        })\r\n\r\n\r\n        // if (currentBranch.timeOpen < date.get) \r\n        return (\r\n            <div>\r\n                <HeaderCustom navbar ={<NavCustom />} />\r\n                <SubNavbar />\r\n                <Row>\r\n                    <Col span={7} style={{ paddingLeft: 40, paddingRight: 30 }}><img width={\"100%\"} height={200} style={{ display: \"block\" }} src={`data:image/jpg;base64,${branchImage.picByte}`} />\r\n                        <br />\r\n                        <br />\r\n                        <Title  style={{fontSize:14}}>Địa chỉ: {branch.address}</Title>\r\n                        <Title  style={{fontSize:14}}>Liên hệ: {branch.phone}</Title>\r\n                        <Title  style={{fontSize:14}}>Mô tả: {branch.description}</Title>\r\n\r\n\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Title  level={3} style={{marginBottom:0}}>{branch.name}</Title>\r\n                        <Title level={4} type={'secondary'} style ={{marginTop:0, marginBottom:0}}>{branchStatus}</Title>\r\n                        <Title level={4} style={{marginTop:5,color:'rgba(64, 63, 63, 0.85)'}}>{timeOpen.format('hh:mm A')} - {timeClose.format('hh:mm A')}</Title>\r\n                        <Rate value = {branch.totalEvaluation} disabled style = {{marginBottom:30}}/><span style={{color:'rgb(123, 121, 121)', marginLeft:5, fontStyle:'italic'}}>({branch.numberOfEvaluations} đánh giá)</span>\r\n                        \r\n                        \r\n                        {showRateBranch}\r\n                        {showRateResult}\r\n                    </Col>\r\n                    <Col span={11} style={{ paddingRight: 40 }}>\r\n                        <Card title='Sản phẩm'>\r\n                            <div className='list-branch-item' style={{ overflowY: 'scroll', height: 365 }}>\r\n                                {listBranchItems}\r\n                            </div>\r\n                        </Card>\r\n\r\n                        <div>\r\n                            <Pagination current={this.state.page} total={this.state.total} pageSize={PAGE_SIZE_BRANCH_ITEMS}\r\n                                onChange={(page) => this._handlerPagination(branchId, page)} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { render } from \"@testing-library/react\"\r\nimport NavCustom from \"../../component/NavCustom\";\r\nimport Axios from \"axios\";\r\nimport { Layout, Menu, Button, Input, Row, Col } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport Wellcome from \"../../component/Wellcome\";\r\nimport nProgress from 'nprogress';\r\nimport 'nprogress/nprogress.css'\r\nimport Bracnh from \"../../component/Branch\";\r\nimport BranchDetails from \"../../component/BranchDetails\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SubNavbar from \"../../component/SubNavBar\";\r\nconst { Header } = Layout;\r\n\r\n\r\nexport default class Product extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            images: [],\r\n            isLoading: true,\r\n            resStatus: null,\r\n            contents: <Wellcome />\r\n        }\r\n    }\r\n\r\n    async _onClickMenu(Comp) {\r\n        nProgress.start();\r\n        this.setState({\r\n            contents: <Comp />\r\n        })\r\n        nProgress.done();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if(localStorage && localStorage.getItem('currentBranch')){\r\n            console.log(localStorage.getItem('currentBranch'));\r\n            this.setState({\r\n                contents: <BranchDetails />\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const contents = this.state.contents;\r\n        const {isAuth, content} = this.props;\r\n        return (\r\n            <div>\r\n                <SubNavbar />\r\n                <div>\r\n                    {content}\r\n                </div>\r\n                \r\n\r\n            </div>);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport SubNavbar from './SubNavBar';\r\nimport { Card, Button, Tooltip, Space, Table, Input } from 'antd';\r\nimport Request from '../service/Request';\r\nimport Title from 'antd/lib/skeleton/Title';\r\nimport { EyeFilled, PlusCircleFilled, MinusCircleOutlined, MinusCircleFilled, DeleteFilled, DeleteTwoTone } from '@ant-design/icons';\r\nimport NavCustom from './NavCustom';\r\nimport Storage from '../util/Storage';\r\nimport HeaderCustom from './HeaderCustom';\r\nimport API from '../service/API';\r\nimport history from '../util/History';\r\n\r\nexport default class Invoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            invoiceStorage: [],\r\n            userId: 0,\r\n            resStatus: ''\r\n        }\r\n        this._loadItem = this._loadItem.bind(this);\r\n        this._changeQuantity = this._changeQuantity.bind(this);\r\n        this._handlerClickDelete = this._handlerClickDelete.bind(this);\r\n        this._handlerClickBuy = this._handlerClickBuy.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._loadItem();\r\n\r\n\r\n    }\r\n\r\n    async _loadItem(id) {\r\n        if (Storage.has('invoiceArray')) {\r\n            var data = Storage.get('invoiceArray');\r\n            this.setState({\r\n                invoiceStorage: data\r\n            })\r\n\r\n        }\r\n       \r\n    }\r\n\r\n    _changeQuantity(id, quantity) {\r\n        console.log(id);\r\n        console.log(quantity);\r\n        var invoiceLineUpdate = this.state.invoiceStorage;\r\n        invoiceLineUpdate.map(\r\n            invoice => {\r\n                invoice.invoiceLines.map(invoiceLine => {\r\n                    if (invoiceLine.itemId && invoiceLine.itemId === id) {\r\n                        invoiceLine.quantity = quantity;\r\n                    }\r\n\r\n                })\r\n            }\r\n        )\r\n\r\n        console.log(invoiceLineUpdate);\r\n\r\n        localStorage.setItem('invoiceArray', JSON.stringify(invoiceLineUpdate));\r\n\r\n        this._loadItem();\r\n\r\n\r\n    }\r\n\r\n    _handlerClickDelete(id) {\r\n        var invoiceArrayUpdate = this.state.invoiceStorage;\r\n        invoiceArrayUpdate.map((invoice, index) => {\r\n            invoice.invoiceLines.map((invoiceLine, index) => {\r\n                if (invoiceLine.itemId && invoiceLine.itemId === id) {\r\n                    invoice.invoiceLines.splice(index, 1);\r\n                }\r\n            })\r\n            if (!invoice.invoiceLines.length) {\r\n                invoiceArrayUpdate.splice(index, 1);\r\n            }\r\n        })\r\n\r\n        if (!invoiceArrayUpdate.length) {\r\n            Storage.remove('invoiceArray');\r\n        }\r\n\r\n        localStorage.setItem('invoiceArray', JSON.stringify(invoiceArrayUpdate));\r\n\r\n\r\n\r\n        this._loadItem();\r\n    }\r\n\r\n    async _handlerClickBuy(branchId = 0, invoiceLines = []){\r\n        const userId = await API.getCurrentId();\r\n        let data ={\r\n            invoiceLineRequestDTOList: [],\r\n            userId: userId\r\n        }\r\n        invoiceLines.map(invoiceLine =>{\r\n            let line = {\r\n                itemId: invoiceLine.itemId,\r\n                quantity: invoiceLine.quantity\r\n            }\r\n            data.invoiceLineRequestDTOList.push(line);\r\n        })\r\n\r\n        console.log(data);\r\n        const res = await API.createInvoiceCustomer(data);\r\n        if(res != null){\r\n            console.log('dat thanh cong')\r\n            Storage.removeBranchInvoice(branchId);\r\n            Storage.set('successBuying', true);\r\n            history.push('invoices-history');\r\n\r\n        }\r\n        else console.log('dat that bai')\r\n        console.log(res);\r\n        this._loadItem();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var { invoiceStorage } = this.state;\r\n        console.log(invoiceStorage);\r\n\r\n        const columns = [\r\n            {\r\n                title: '',\r\n                dataIndex: \"image\",\r\n                render: image => <img style={{ width: 100, height: 50, display: \"inline-block\" }} src={`data:image/jpg;base64,${image}`} />\r\n            },\r\n            {\r\n                title: 'Sản phẩm',\r\n                dataIndex: 'name',\r\n            },\r\n\r\n            {\r\n                title: 'Giá',\r\n                dataIndex: 'price',\r\n            },\r\n            {\r\n                title: 'Cửa hàng',\r\n                dataIndex: 'branchName',\r\n            },\r\n            {\r\n                title: 'Số lượng',\r\n                dataIndex: 'quantity',\r\n                render: (quantity, row) =>\r\n                    <Input\r\n                        type={'number'} min={1} max={99}\r\n                        // addonBefore={<MinusCircleFilled style={{ display: 'inline-block', overflow: 'hidden', color:'#007bff' }}/>} \r\n                        // addonAfter={<PlusCircleFilled style={{ display: 'inline-block', overflow: 'hidden', color:'#007bff' }} />} \r\n                        defaultValue={quantity} style={{ width: 70 }}\r\n                        onChange={value => this._changeQuantity(row.itemId, Number(value.target.value))}\r\n                    />\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'itemId',\r\n                render: (itemId) =>\r\n                    <Button\r\n                        onClick={() => this._handlerClickDelete(itemId)}\r\n                        icon={<DeleteTwoTone style={{ display: 'inline-block', overflow: 'hidden', color: '#007bff' }} />}></Button>\r\n\r\n            },\r\n\r\n        ];\r\n\r\n\r\n        const listInvoiceView = invoiceStorage.map(invoiceStorage => {\r\n            let totalPay = 0;\r\n            totalPay = invoiceStorage.invoiceLines.map(invoiceStorage => invoiceStorage.price* invoiceStorage.quantity).reduce((totalPay, current)=> totalPay + current, 0);\r\n            return <div>\r\n                <Card.Grid\r\n                    style={{ width: '100%' }}\r\n                    key={invoiceStorage.branchId}>\r\n                    <p>cửa hàng: <b>{invoiceStorage.branchName}</b></p>\r\n                    <Table columns={columns}\r\n                        dataSource={invoiceStorage.invoiceLines}\r\n                        pagination={false} />\r\n                    \r\n                    <Space style={{ float: 'right', marginTop:10}}>\r\n                        <p style ={{margin:'auto'}}><b>Tổng: <span style = {{color:'red'}}>{totalPay}</span> đồng</b></p>\r\n                    <Button\r\n                        type=\"primary\" size={'middle'} shape=\"round\"\r\n                        onClick = { () => this._handlerClickBuy(invoiceStorage.branchId, invoiceStorage.invoiceLines)}  >\r\n                        Đặt hàng\r\n                            </Button>\r\n                    </Space>\r\n                </Card.Grid>\r\n            </div>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <HeaderCustom navbar ={<NavCustom />} />\r\n                <SubNavbar />\r\n                <div style={{ paddingLeft: 60, paddingRight: 60 }}>\r\n                    <Card>\r\n                        {listInvoiceView}\r\n\r\n                    </Card>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport Request from \"../service/Request\";\r\nimport Storage from \"../util/Storage\";\r\nimport NavCustom from \"../component/NavCustom\";\r\nimport API from \"../service/API\";\r\nimport history from \"../util/History\";\r\nimport HeaderCustom from \"../component/HeaderCustom\";\r\nimport Title from \"antd/lib/typography/Title\";\r\n\r\n\r\nexport default class Singin extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            token:'',\r\n            isLoading: true,\r\n            isAuth:false,\r\n            authFail: false,\r\n        }\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.onFinishFailed = this.onFinishFailed.bind(this);\r\n    }\r\n\r\n    async onFinish (values){\r\n        const data = {\r\n            email: values.username,\r\n            password: values.password\r\n        }\r\n        const res = await Request.post('api/v1/users/signin', data);\r\n        if(res.code && res.code == 200){\r\n            Storage.set('accessToken', res.data.accessToken);\r\n            Request.setAccessToken(Storage.get('accessToken'));\r\n            \r\n            const res2 = await Request.get('api/v1/users/currents');\r\n            this.setState({\r\n                authFail:false\r\n            })\r\n\r\n            var role = await API.getCurrentRole();\r\n            switch(String(role)){\r\n                case 'ROLE_ADMIN' : history.push('/admins');\r\n                break;\r\n                case 'ROLE_MANAGER' : history.push('/managers');\r\n                break;\r\n                case 'ROLE_CUSTOMER' : history.push('/');\r\n                break;\r\n                case 'ROLE_SHIPPER' : history.push('/shippers');\r\n                break;\r\n                default : history.push('/shippers');\r\n            }\r\n        }\r\n        else{\r\n            this.onFinishFailed();\r\n        }\r\n      };\r\n    \r\n    onFinishFailed () {\r\n        this.setState({\r\n            authFail:true\r\n        })\r\n      };\r\n\r\n    render() {\r\n        const {authFail} = this.state;\r\n        const authFailMess = authFail ? (<Form.Item style={{marginBottom:0}}><p style={{color:'red', textAlign:\"center\"}}>Email hoặc mật khẩu chưa chính xác</p></Form.Item>): '';\r\n        return (\r\n            <div>\r\n                <HeaderCustom navbar ={<NavCustom />} />\r\n            <div id= 'components-form-demo-normal-login' >\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                >\r\n                    <Form.Item>\r\n                    <Title level = {3} style={{textAlign:\"center\", marginTop:5,color:\"#414141\"}}>Đăng nhập</Title>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        className=\"mt-24\"\r\n                        rules={[{ required: true, message: 'Vui lòng nhập email!' }]}\r\n                    >\r\n                        <Input tabIndex = {1} prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{ required: true, message: 'Vui lòng nhập mật khẩu!' }]}\r\n                    >\r\n                        <Input tabIndex={2}\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n                            placeholder=\"Mật khẩu\"\r\n                        />\r\n                    </Form.Item>\r\n                    {authFailMess}\r\n                    {/* <Form.Item>\r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                            Forgot password\r\n        </a>\r\n                    </Form.Item> */}\r\n\r\n                    <Form.Item>\r\n                        <Button tabIndex ={3} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Đăng nhập\r\n        </Button>\r\n        hoặc <a href=\"\">Đăng ký!</a>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport { Menu, Layout, Table, Button, Space } from \"antd\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { LaptopOutlined, BranchesOutlined, MenuFoldOutlined, UserOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\r\nimport User from \"../page/admin/User\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Kind from \"../page/admin/Kind\";\r\nimport nProgress from \"nprogress\";\r\nimport history from \"../util/History\";\r\nimport API from \"../service/API\";\r\nimport moment from 'moment';\r\nimport Pagination from \"./Pagination\";\r\nimport { PAGE_SIZE_INVOICE } from \"../constant/APIConstant\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class ManagerHomePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      invoice: [],\r\n      filter: '',\r\n      defaultIndexMenu: '2',\r\n      collapsed: false,\r\n    }\r\n    this._onClickMenu = this._onClickMenu.bind(this);\r\n    this._getAllInvoice = this._getAllInvoice.bind(this);\r\n    this._handlerPagination = this._handlerPagination.bind(this);\r\n    this._handlerClickCancelOrder = this._handlerClickCancelOrder.bind(this);\r\n    this._handlerClickConfirm= this._handlerClickConfirm.bind(this);\r\n    this._handlerClickSuccessInvoice= this._handlerClickSuccessInvoice.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const filter = query.get('filter');\r\n    if (filter) {\r\n      let index = '2';\r\n      index = filter.toUpperCase() === 'ORDERED'\r\n        ? '3'\r\n        : filter.toUpperCase() === 'PREPARING'\r\n          ? '4'\r\n          : filter.toUpperCase() === 'DELIVERING'\r\n            ? '5'\r\n            : filter.toUpperCase() === 'SUCCESSFULLY'\r\n              ? '6'\r\n              : filter.toUpperCase() === 'FAILED'\r\n                ? '7'\r\n                : '2';\r\n      this.setState({\r\n        filter: filter.toUpperCase(),\r\n        defaultIndexMenu: index,\r\n      })\r\n    }\r\n\r\n    this._getAllInvoice();\r\n  }\r\n\r\n  async _getAllInvoice(page = 1) {\r\n    const role = await API.getCurrentRole();\r\n    if (role && role == 'ROLE_MANAGER') {\r\n      const managerId = await API.getCurrentId();\r\n      if (managerId) {\r\n        const res = await API.getAllInvoiceManager(managerId, this.state.filter, page, PAGE_SIZE_INVOICE);\r\n        this.setState({\r\n          invoice: res,\r\n        })\r\n      }\r\n    }\r\n  }\r\n  async _handlerPagination(page = 1) {\r\n    this._getAllInvoice(page);\r\n\r\n  }\r\n  \r\n  async _handlerClickConfirm(id) {\r\n    const res = await API.confirmInvoiceCustomer(id);\r\n    if(res!= null)\r\n    this._getAllInvoice();\r\n\r\n  }\r\n\r\n  async _handlerClickCancelOrder(id) {\r\n    const res = await API.setInvoiceFail(id);\r\n    if(res!= null)\r\n    this._getAllInvoice();\r\n\r\n  }\r\n\r\n  async _handlerClickSuccessInvoice(id) {\r\n    const res = await API.setSuccessInvoiceCustomer(id);\r\n    if(res!= null)\r\n    this._getAllInvoice();\r\n\r\n  }\r\n\r\n\r\n  toggle(){\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  toggle2(){\r\n      console.log(window.innerWidth)\r\n      if(window.innerWidth < 638){\r\n        this.setState({\r\n          collapsed: true,\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n          collapsed: false,\r\n        });\r\n      }\r\n\r\n  };\r\n\r\n  async _onClickMenu(url) {\r\n    window.location.href = url;\r\n  }\r\n\r\n  render() {\r\n    const trigger = (this.state.collapsed)\r\n      ? <Menu mode=\"inline\" theme={'dark'}\r\n        style={{ height: '100%', width: 80 }}>\r\n        <MenuUnfoldOutlined\r\n          className='trigger'\r\n          onClick={()=> this.toggle()}\r\n          style={{\r\n            marginTop: 16,\r\n            marginBottom: 'auto',\r\n            marginLeft: 5,\r\n            color: '#fff',\r\n            fontSize: 30,\r\n            display: 'block'\r\n          }}\r\n\r\n        />\r\n      </Menu>\r\n\r\n\r\n      : <Menu mode=\"inline\" theme={'dark'}\r\n        style={{ height: '100%', width: 80 }}>\r\n        <MenuFoldOutlined\r\n          className='trigger'\r\n          onClick={()=> this.toggle()}\r\n          style={{\r\n            marginTop: 16,\r\n            marginBottom: 'auto',\r\n            marginLeft: 5,\r\n            color: '#fff',\r\n            fontSize: 30,\r\n            display: 'block'\r\n          }}\r\n\r\n        />\r\n      </Menu>\r\n\r\n\r\n    // INVOICE\r\n\r\n    const { invoice, filter, defaultIndexMenu } = this.state;\r\n    console.log(filter +' '+ defaultIndexMenu)\r\n    const columns = [\r\n      {\r\n        title: 'Khách hàng',\r\n        dataIndex: \"user\",\r\n        render: user => <span style={{ color: 'black' }}>{user.fullName}</span>\r\n      },\r\n      {\r\n        title: 'Ngày đặt',\r\n        dataIndex: 'created',\r\n        render: created => moment(created).format(\"hh:mm DD-MM-yyyy\")\r\n      },\r\n      {\r\n        title: 'Id',\r\n        dataIndex: 'id',\r\n        className: 'hide'\r\n      },\r\n\r\n      {\r\n        title: 'Món ăn',\r\n        dataIndex: 'invoiceLines',\r\n        render: (invoiceLines) => invoiceLines.map(invoiceLine => {\r\n          return (<span><span style={{ color: 'black' }}>{invoiceLine.itemName}</span> ({invoiceLine.itemPrice} đồng) - Số lượng : <span style={{ color: 'black' }}>{invoiceLine.quantity}</span><br /></span>)\r\n        }\r\n        )\r\n      },\r\n      {\r\n        title: 'Trạng thái',\r\n        dataIndex: 'status',\r\n        render: status =>\r\n          status == 'ORDERED'\r\n            ? <span style={{ color: 'red' }}>Đang chờ</span>\r\n            : status == 'PREPARING'\r\n              ? <span style={{ color: 'orange' }}>Đang chuẩn bị</span>\r\n              : status == 'DELIVERING'\r\n                ? <span style={{ color: 'blue' }}>Đang giao</span>\r\n                : status == 'SUCCESSFULLY'\r\n                  ? <span style={{ color: 'green' }}>Thành công</span>\r\n                  : <span style={{ color: 'black' }}>Không thành công</span>\r\n      },\r\n      {\r\n        title: 'Người giao hàng',\r\n        dataIndex: 'shipper',\r\n        render: shipper => (shipper == null)? 'Đang chờ': <span style={{color:'black'}}>{shipper.fullName}</span>,\r\n      },\r\n      {\r\n        title: 'Thanh toán',\r\n        dataIndex: 'purchaseDetail',\r\n        render: purchaseDetail => (purchaseDetail == null)? 'Đang chờ': <span style={{color:'green'}}>{(purchaseDetail.status === 'PURCHASED')?\"Đã thanh toán\":purchaseDetail.status === 'REFUND'?\"Đang hoàn tiền\":''} ({purchaseDetail.method})</span>,\r\n      },\r\n      {\r\n        title: 'Thao tác',\r\n        dataIndex: 'status',\r\n        render: (status, row) =>\r\n          status == 'ORDERED'\r\n            ? <Space><Button type='primary' onClick = {()=> this._handlerClickConfirm(row.id)}>Xác nhận</Button> <Button danger onClick = {()=> this._handlerClickCancelOrder(row.id)}>Hủy</Button></Space>\r\n            : status == 'PREPARING'\r\n              ? <Space><Button danger onClick = {()=> this._handlerClickCancelOrder(row.id)}>Hủy</Button></Space>\r\n              : status == 'DELIVERING'\r\n                ? <Space><Button type='primary' ghost onClick = {()=> this._handlerClickSuccessInvoice(row.id)}>Set đã giao</Button> <Button danger onClick = {()=> this._handlerClickCancelOrder(row.id)}>Hủy</Button></Space>\r\n                : <Space><Button>Chi tiết</Button></Space>\r\n\r\n\r\n      },\r\n\r\n\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <HeaderCustom trigger={trigger} navbar={<NavCustom />} />\r\n\r\n        <Layout className=\"main-layout\" style={{ border: '4px #f0f2f5 solid' }}>\r\n          <Sider theme='light' width={230} breakpoint='md' onBreakpoint={()=> this.toggle2()} trigger={null} collapsible collapsed={this.state.collapsed} className=\"site-layout-background\">\r\n            <Menu className=\"menu-custom\"\r\n              mode=\"inline\"\r\n              defaultOpenKeys={['sub1']}\r\n              selectedKeys = {defaultIndexMenu}\r\n              style={{ height: '100%', borderRight: 0 }}\r\n            >\r\n              <SubMenu\r\n                key=\"sub1\"\r\n                icon={<UserOutlined className='font-size-menu' />}\r\n                title={\r\n                  <span className='font-size-menu'>\r\n                    Đơn Hàng \r\n                  </span>\r\n                }\r\n              >\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers')} className='font-size-sub-menu' key=\"2\">Tất cả</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=ordered')} className='font-size-sub-menu' key=\"3\">Đang chờ</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=preparing')} className='font-size-sub-menu' key=\"4\">Đang chuẩn bị</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=delivering')} className='font-size-sub-menu' key=\"5\">Đang giao</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=succesfully')} className='font-size-sub-menu' key=\"6\">Thành công</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=failed')} className='font-size-sub-menu' key=\"7\">Không thành công</Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu\r\n                key=\"sub2\"\r\n                icon={<LaptopOutlined className='font-size-menu' />}\r\n                title={\r\n                  <span className='font-size-menu'>\r\n                    Món ăn\r\n                  </span>\r\n                }\r\n              >\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers-branchs-items')} className='font-size-sub-menu' key=\"6\">Cửa hàng</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers-branchs-items')} className='font-size-sub-menu' key=\"7\">Sản phẩm</Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout style={{ padding: 0 }} className=\"site-layout\">\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              <div style={{ border: '2px solid #fafafa', marginBottom: 24 }}>\r\n                <Title style={{ textAlign: \"center\", color: 'rgb(117, 114, 114)', fontSize: 22, marginBottom: 13, marginTop: 13 }}>Tất cả đơn hàng</Title>\r\n              </div>\r\n              <Table columns={columns}\r\n                dataSource={invoice.content}\r\n                pagination={false}\r\n              />\r\n              <div>\r\n                <Pagination current={invoice.page} total={invoice.total} pageSize={PAGE_SIZE_INVOICE}\r\n                  onChange={(page) => this._handlerPagination(page)} />\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport { Menu, Layout, Table, Button, Space } from \"antd\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { LaptopOutlined, BranchesOutlined, MenuFoldOutlined, UserOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\r\nimport User from \"../page/admin/User\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Kind from \"../page/admin/Kind\";\r\nimport nProgress from \"nprogress\";\r\nimport history from \"../util/History\";\r\nimport API from \"../service/API\";\r\nimport moment from 'moment';\r\nimport Pagination from \"./Pagination\";\r\nimport { PAGE_SIZE_INVOICE } from \"../constant/APIConstant\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class ShipperHomePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      invoice: [],\r\n      invoiceAll: false,\r\n      defaultIndexMenu: '2',\r\n      collapsed: true,\r\n    }\r\n    this._onClickMenu = this._onClickMenu.bind(this);\r\n    this._getAllInvoiceOfShipper = this._getAllInvoiceOfShipper.bind(this);\r\n    this._handlerPagination = this._handlerPagination.bind(this);\r\n    this._handlerClickCancelOrder = this._handlerClickCancelOrder.bind(this);\r\n    this._handlerClickConfirm= this._handlerClickConfirm.bind(this);\r\n    this._handlerClickPurchaseSuccess= this._handlerClickPurchaseSuccess.bind(this);\r\n    this._getAllInvoicePreparingForShipper = this._getAllInvoicePreparingForShipper.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    this._getAllInvoiceOfShipper();\r\n  }\r\n\r\n  async _getAllInvoiceOfShipper(page = 1) {\r\n    const role = await API.getCurrentRole();\r\n    if (role && role == 'ROLE_SHIPPER') {\r\n      const id = await API.getCurrentId();\r\n      if (id) {\r\n        const res = await API.getAllInvoiceOfShipper(id, page, PAGE_SIZE_INVOICE);\r\n        this.setState({\r\n          invoice: res,\r\n          invoiceAll: false,\r\n        })\r\n      }\r\n    }\r\n  }\r\n  async _getAllInvoicePreparingForShipper(page = 1) {\r\n    const role = await API.getCurrentRole();\r\n    if (role && role == 'ROLE_SHIPPER') {\r\n      const id = await API.getCurrentId();\r\n      if (id) {\r\n        const res = await API.getAllInvoicePreparingForShipper(page, PAGE_SIZE_INVOICE);\r\n        this.setState({\r\n          invoice: res,\r\n          invoiceAll: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async _handlerPagination(page = 1) {\r\n      if(this.state.invoiceAll == true){\r\n        this._getAllInvoicePreparingForShipper(page);\r\n      }\r\n    else{\r\n        this._getAllInvoiceOfShipper(page);\r\n    }\r\n\r\n  }\r\n\r\n  async _handlerClickConfirm(id) {\r\n    const shipperId = await API.getCurrentId();\r\n    if(shipperId){\r\n        const res = await API.confirmInvoiceByShipper(id, shipperId);\r\n    }\r\n    this._getAllInvoiceOfShipper();\r\n\r\n  }\r\n\r\n  async _handlerClickCancelOrder(id) {\r\n    const res = await API.setInvoiceFail(id);\r\n    if(res!= null)\r\n    this._getAllInvoiceOfShipper();\r\n\r\n  }\r\n\r\n  async _handlerClickPurchaseSuccess(id) {\r\n    const res = await API.setSuccessInvoiceCustomer(id);\r\n    if(res!= null)\r\n    this._getAllInvoiceOfShipper();\r\n\r\n  }\r\n\r\n\r\n  toggle(){\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  toggle2(){\r\n      console.log(window.innerWidth)\r\n      if(window.innerWidth < 638){\r\n        this.setState({\r\n          collapsed: true,\r\n        });\r\n      }\r\n      else{\r\n        this.setState({\r\n          collapsed: false,\r\n        });\r\n      }\r\n\r\n  };\r\n\r\n  async _onClickMenu(url) {\r\n    window.location.href = url;\r\n  }\r\n\r\n  render() {\r\n    const trigger = (this.state.collapsed)\r\n      ? <Menu mode=\"inline\" theme={'dark'}\r\n        style={{ height: '100%', width: 80 }}>\r\n        <MenuUnfoldOutlined\r\n          className='trigger'\r\n          onClick={()=> this.toggle()}\r\n          style={{\r\n            marginTop: 16,\r\n            marginBottom: 'auto',\r\n            marginLeft: 5,\r\n            color: '#fff',\r\n            fontSize: 30,\r\n            display: 'block'\r\n          }}\r\n\r\n        />\r\n      </Menu>\r\n\r\n\r\n      : <Menu mode=\"inline\" theme={'dark'}\r\n        style={{ height: '100%', width: 80 }}>\r\n        <MenuFoldOutlined\r\n          className='trigger'\r\n          onClick={()=> this.toggle()}\r\n          style={{\r\n            marginTop: 16,\r\n            marginBottom: 'auto',\r\n            marginLeft: 5,\r\n            color: '#fff',\r\n            fontSize: 30,\r\n            display: 'block'\r\n          }}\r\n\r\n        />\r\n      </Menu>\r\n\r\n\r\n    // INVOICE\r\n\r\n    const { invoice, filter, defaultIndexMenu } = this.state;\r\n    console.log(filter +' '+ defaultIndexMenu)\r\n    const columns = [\r\n      {\r\n        title: 'Khách hàng',\r\n        dataIndex: \"user\",\r\n        render: user => <span style={{ color: 'black' }}>{user.fullName}</span>\r\n      },\r\n      {\r\n        title: 'Cửa hàng',\r\n        dataIndex: \"branchName\",\r\n        render: branchName => <span style={{ color: 'black' }}>{branchName}</span>\r\n      },\r\n      {\r\n        title: 'Ngày đặt',\r\n        dataIndex: 'created',\r\n        render: created => moment(created).format(\"hh:mm DD-MM-yyyy\")\r\n      },\r\n      {\r\n        title: 'Id',\r\n        dataIndex: 'id',\r\n        className: 'hide'\r\n      },\r\n\r\n      {\r\n        title: 'Món ăn',\r\n        dataIndex: 'invoiceLines',\r\n        render: (invoiceLines) => invoiceLines.map(invoiceLine => {\r\n          return (<span><span style={{ color: 'black' }}>{invoiceLine.itemName}</span> ({invoiceLine.itemPrice} đồng) - Số lượng : <span style={{ color: 'black' }}>{invoiceLine.quantity}</span><br /></span>)\r\n        }\r\n        )\r\n      },\r\n      {\r\n        title: 'Trạng thái',\r\n        dataIndex: 'status',\r\n        render: status =>\r\n            status == 'PREPARING'\r\n              ? <span style={{ color: 'orange' }}>{status}</span>\r\n              : status == 'DELIVERING'\r\n                ? <span style={{ color: 'blue' }}>{status}</span>\r\n                : status == 'SUCCESSFULLY'\r\n                  ? <span style={{ color: 'green' }}>{status}</span>\r\n                  : <span style={{ color: 'black' }}>{status}</span>\r\n      },\r\n      {\r\n        title: 'Thanh toán',\r\n        dataIndex: 'purchaseDetail',\r\n        render: purchaseDetail => (purchaseDetail == null)? 'Đang chờ': <span style={{color:'green'}}>{purchaseDetail.status} ({purchaseDetail.method})</span>,\r\n      },\r\n      {\r\n        title: 'Thao tác',\r\n        dataIndex: 'status',\r\n        render: (status, row) =>\r\n          status =='PREPARING'\r\n              ? <Space><Button danger onClick = {()=> this._handlerClickConfirm(row.id)}>Nhận</Button></Space>\r\n              : status == 'DELIVERING'\r\n                ? <Space><Button type='primary' ghost onClick = {()=> this._handlerClickPurchaseSuccess(row.id)}>Đã giao thành công ?</Button> <Button danger onClick = {()=> this._handlerClickCancelOrder(row.id)}>Không thành công ?</Button></Space>\r\n                : <Space><Button>Chi tiết</Button></Space>\r\n\r\n\r\n      },\r\n\r\n\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <HeaderCustom trigger={trigger} navbar={<NavCustom />} />\r\n\r\n               <div style ={{width:'100%', display:'inline-block'}}>\r\n               <Space style = {{ marginTop:10, marginBottom:5,marginRight:10, float:'right'}}> \r\n                   <Button ghost type='primary' onClick = {()=> this._getAllInvoicePreparingForShipper()}>Đơn hàng có sẵn</Button> \r\n                   <Button type = 'primary' onClick = {()=> this._getAllInvoiceOfShipper()}>Đơn hàng đang giao</Button> \r\n               </Space>\r\n               </div>\r\n              <div style={{marginRight:10,marginLeft:10}}>\r\n              <div style={{ border: '2px solid #fafafa', marginBottom: 24 }}>\r\n                <Title style={{ textAlign: \"center\", color: 'rgb(117, 114, 114)', fontSize: 22, marginBottom: 13, marginTop: 13 }}>Tất cả đơn hàng</Title>\r\n              </div>\r\n              <Table columns={columns}\r\n                dataSource={invoice.content}\r\n                pagination={false}\r\n              />\r\n              <div>\r\n                <Pagination current={invoice.page} total={invoice.total} pageSize={PAGE_SIZE_INVOICE}\r\n                  onChange={(page) => this._handlerPagination(page)} />\r\n              </div>\r\n              </div>\r\n         \r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport SubNavbar from './SubNavBar';\r\nimport { Card, Button, Tooltip, Space, Table, Input, Alert } from 'antd';\r\nimport Request from '../service/Request';\r\nimport Title from 'antd/lib/skeleton/Title';\r\nimport { EyeFilled, PlusCircleFilled, MinusCircleOutlined, MinusCircleFilled, DeleteFilled, DeleteTwoTone } from '@ant-design/icons';\r\nimport NavCustom from './NavCustom';\r\nimport Storage from '../util/Storage';\r\nimport HeaderCustom from './HeaderCustom';\r\nimport moment from 'moment';\r\nimport API from '../service/API';\r\nimport history from '../util/History';\r\nimport { PAGE_SIZE_INVOICE } from '../constant/APIConstant';\r\nimport Pagination from './Pagination';\r\n\r\nexport default class InvoiceHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      invoiceHistory: [],\r\n      userId: 0,\r\n      resStatus: '',\r\n      isBuySuccess: false,\r\n    }\r\n    this._loadItem = this._loadItem.bind(this);\r\n    this._handlerClickPurchase = this._handlerClickPurchase.bind(this);\r\n    this._handlerClickCancelOrder = this._handlerClickCancelOrder.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this._loadItem(1,5);\r\n    if(Storage.has('successBuying') && Storage.get('successBuying') == true)\r\n      this.setState({\r\n        isBuySuccess: true\r\n      })\r\n      Storage.remove('successBuying');\r\n\r\n  }\r\n\r\n  async _loadItem(page =1, size =5) {\r\n    if (await API.isCustomer() != true) {\r\n      history.push('/')\r\n    }\r\n    else {\r\n      const res = await API.getAllInvoiceCustomer(await API.getCurrentId(), page, size);\r\n      console.log(res)\r\n      this.setState({\r\n        invoiceHistory: res\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  _handlerPagination(page =1, size = 5){\r\n    this._loadItem(page, size);\r\n  }\r\n\r\n  async _handlerClickPurchase(id){\r\n    const res = await API.createOrder(id);\r\n    if(res!= null)\r\n    console.log(res)\r\n    window.location.href = res.order_url;\r\n  }\r\n\r\n  async _handlerClickCancelOrder(id){\r\n\r\n    const res = await API.cancelInvoiceCustomer(id);\r\n    if(res!= null)\r\n    this._loadItem()\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    var { invoiceHistory, isBuySuccess } = this.state;\r\n    console.log(isBuySuccess)\r\n    var alert = (isBuySuccess == true) ? (\r\n      <Alert\r\n          className ='fixed-100'\r\n          message=\"Đặt hàng thành công\"\r\n          description='đơn hàng đã lưu vào hệ thống'\r\n          type=\"success\"\r\n          showIcon\r\n          closable\r\n        />\r\n    )\r\n    : '';\r\n    const columns = [\r\n      {\r\n        title: 'Cửa hàng',\r\n        dataIndex: \"branchName\",\r\n        render: branchName => <span style={{ color: 'black' }}>{branchName}</span>\r\n      },\r\n      {\r\n        title: 'Id',\r\n        dataIndex: \"id\",\r\n        className: 'hide'\r\n      },\r\n      {\r\n        title: 'Ngày đặt',\r\n        dataIndex: 'created',\r\n        render: created => moment(created).format(\"hh:mm DD-MM-yyyy\")\r\n      },\r\n\r\n      {\r\n        title: 'Món ăn',\r\n        dataIndex: 'invoiceLines',\r\n        render: (invoiceLines) => invoiceLines.map(invoiceLine => {\r\n          return (<span><span style={{ color: 'black' }}>{invoiceLine.itemName}</span> ({invoiceLine.itemPrice} đồng) - Số lượng : <span style={{ color: 'black' }}>{invoiceLine.quantity}</span><br /></span>)\r\n        }\r\n        )\r\n      },\r\n      {\r\n        title: 'Trạng thái',\r\n        dataIndex: 'status',\r\n        render: status =>\r\n          status == 'ORDERED'\r\n            ? <span style={{ color: 'red' }}>Đang chờ</span>\r\n            : status == 'PREPARING'\r\n              ? <span style={{ color: 'orange' }}> Đang chuẩn bị</span>\r\n              : status == 'DELIVERING'\r\n                ? <span style={{ color: 'blue' }}>Đang giao</span>\r\n                : status == 'SUCCESSFULLY'\r\n                  ? <span style={{ color: 'green' }}>Thành công</span>\r\n                  : <span style={{ color: 'black' }}>Không thành công</span>\r\n      },\r\n      {\r\n        title: 'Thanh toán',\r\n        dataIndex: 'purchaseDetail',\r\n        render: purchaseDetail => (purchaseDetail == null)? 'Đang chờ': <span style={{color:'green'}}>{(purchaseDetail.status === 'PURCHASED')?\"Đã thanh toán\":purchaseDetail.status === 'REFUND'?\"Đang hoàn tiền\":''} ({purchaseDetail.method})</span>,\r\n      },\r\n      {\r\n        title: 'Thao tác',\r\n        dataIndex: 'status',\r\n        render:( (status, row) =>{\r\n          let disabled = false;\r\n          if(row.purchaseDetail != null && row.purchaseDetail.status !== 'WAITING'){\r\n            disabled = true;\r\n          }\r\n        \r\n          return status == 'ORDERED'\r\n            ? <Space><Button disabled = {disabled} danger onClick = {()=> this._handlerClickCancelOrder(row.id)}>Hủy</Button> <Button disabled = {disabled} onClick = {()=> this._handlerClickPurchase(row.id)} ghost type='primary'>Thanh toán</Button></Space>\r\n            : status == 'PREPARING'\r\n              ? <Space><Button danger disabled>Hủy</Button> <Button disabled = {disabled} ghost onClick = {()=> this._handlerClickPurchase(row.id)}  type='primary'>Thanh toán</Button></Space>\r\n              : status == 'DELIVERING'\r\n                ? <Space><Button danger disabled>Hủy</Button><Button  ghost onClick = {()=> this._handlerClickPurchase(row.id)}  type='primary'>Thanh toán</Button></Space>\r\n                : <Space><Button >Chi tiết</Button></Space>\r\n        }\r\n        )\r\n      },\r\n\r\n\r\n\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <HeaderCustom navbar={<NavCustom />} />\r\n        <SubNavbar />\r\n        <div style={{ paddingLeft: 60, paddingRight: 60 }}>\r\n          <Card>\r\n            <Table columns={columns}\r\n              dataSource={invoiceHistory.content}\r\n              pagination ={false} />\r\n            <div>\r\n                <Pagination current={invoiceHistory.page} total={invoiceHistory.total} pageSize={5}\r\n                  onChange={(page) => this._handlerPagination(page,5)} />\r\n              </div>\r\n          </Card>\r\n          \r\n\r\n\r\n        </div>\r\n        {alert}\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport API from \"../service/API\";\r\nimport { Card, Row, Col, Descriptions, Input, Space, Button, Form, Rate, Divider, Tooltip, Comment, message, Modal } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { PlusCircleFilled, UserOutlined } from \"@ant-design/icons\";\r\nimport Storage from \"../util/Storage\";\r\nimport history from \"../util/History\";\r\nimport SubNavbar from \"./SubNavBar\";\r\nimport moment from \"moment\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\n\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: '',\r\n            itemImage: null,\r\n            itemCommentList: [],\r\n            itemId: 0,\r\n            userId: 0,\r\n            rateValue: 0,\r\n            rateSuccess: true,\r\n            defaultCommentValue:'',\r\n            commentSuccess: true,\r\n            submitting: false,\r\n            modal2Visible: false,\r\n\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const id = query.get('id');\r\n        if (id) {\r\n            this._loadItem(id);\r\n            const userId = await API.getCurrentId();\r\n            this.setState({\r\n                userId: userId,\r\n                itemId: id,\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    async _loadItem(id) {\r\n        const res = await API.getItemDetails(id);\r\n        console.log(id)\r\n        console.log(res)\r\n        if (res != null) {\r\n            this.setState({\r\n                item: res,\r\n                itemImage: res.image,\r\n                itemCommentList: res.commentList,\r\n                defaultCommentValue:\"\"\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async _handlerClickAddInvoice(value) {\r\n        console.log(value)\r\n        const { item } = this.state;\r\n        Storage.addToInvoice(item.id, item.name, item.branchId, item.branchName, item.image.picByte, item.price, value.quantity);\r\n        history.push('/invoices');\r\n    }\r\n\r\n    async _handlerSubmitComment(value) {\r\n        console.log(this.state.userId)\r\n        if(!value.comment){\r\n            message.error(\"Vui lòng nhập nội dung bình luận!\")\r\n        }\r\n        else if(this.state.userId === 0){\r\n            message.error(\"Vui lòng đăng nhập để bình luận\")\r\n        }\r\n        else{\r\n            this.setState({\r\n                submitting:true,\r\n            })\r\n            const res = await API.commentItem(this.state.item.id, this.state.userId, value.comment)\r\n\r\n            if(res == null){\r\n                message.error(\"Đã xảy ra lỗi, vui lòng thử lại!\");\r\n            }\r\n            else {\r\n                this._loadItem(this.state.item.id);\r\n            }\r\n            this.setState({\r\n                submitting:false,\r\n            })\r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    setModal2Visible(modal2Visible) {\r\n        this.setState({ modal2Visible });\r\n      }\r\n\r\n    _handlerClickChangeRate(value){\r\n        this.setState({\r\n            rateValue: value\r\n        })\r\n    }\r\n    async _handlerClickSubmitRate(){\r\n        console.log(this.state.itemId, this.state.userId, this.state.rateValue);\r\n        if(this.state.rateValue != 0){\r\n            const res = await API.rateItem(this.state.itemId, this.state.userId, this.state.rateValue);\r\n            if(res != null){\r\n                message.success(\"Thành công! Cảm ơn bạn đã đánh giá!\");\r\n                this._loadItem(this.state.item.id);\r\n            }\r\n            else{\r\n                message.error(\"Đánh giá không thành công! Vui lòng thử lại!\")\r\n            }\r\n        }\r\n        else{\r\n            message.error(\"Vui lòng nhập chọn điểm đánh giá!\")\r\n        }\r\n        this.setModal2Visible(false);\r\n    }\r\n\r\n    render() {\r\n        const {userId, item, itemImage, itemCommentList, rateSuccess, rateValue } = this.state;\r\n        console.log(item)\r\n        console.log(item.name)\r\n\r\n        let showRateResult = (rateSuccess == false) \r\n        ? (<span style={{color:'red'}}>đánh giá không thành công</span>) \r\n        :'';\r\n\r\n        var showRateItem;\r\n        if (userId != 0) {\r\n            showRateItem = (\r\n                <div>\r\n                    <Button type=\"primary\" ghost style={{float:\"right\"}} onClick={() => this.setModal2Visible(true)}>\r\n                        Đánh giá\r\n                    </Button>\r\n                    <Modal\r\n                        title=\"Đánh giá cửa hàng\"\r\n                        centered\r\n                        visible={this.state.modal2Visible}\r\n                        onOk={() => this._handlerClickSubmitRate()}\r\n                        onCancel={() => this.setModal2Visible(false)}\r\n                    >\r\n                        <Rate style={{margin:'auto', display:'block'}} onChange = {(value)=> this._handlerClickChangeRate(value)}></Rate>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }else{\r\n            showRateItem = '';\r\n        }\r\n\r\n\r\n        let showCommentList = (itemCommentList === '')\r\n            ? \"\"\r\n            : itemCommentList.map(itemComment => {\r\n                return (\r\n                    <div style={{ paddingLeft: \"2.5rem\" }}>\r\n                        <Comment\r\n                            author={<a>{itemComment.userName}</a>}\r\n                            avatar='usercomment.png'\r\n                            content={\r\n                                <p>\r\n                                    {itemComment.content}\r\n                                </p>\r\n                            }\r\n                            datetime={\r\n                                <Tooltip title={moment(itemComment.created).format('YYYY-MM-DD HH:mm:ss')}>\r\n                                    <span>{moment(itemComment.created).fromNow()}</span>\r\n                                </Tooltip>\r\n                            }\r\n                        />\r\n                        <Divider></Divider>\r\n                    </div>\r\n                )\r\n            })\r\n\r\n        let showItemDetails = (item === '')\r\n            ? \"\"\r\n            : (\r\n                <div style={{ margin: '0px 60px' }}>\r\n                    <Row>\r\n                        <Col xs={24} md={10}>\r\n                            <Card cover={<img style={{ display: \"block\", width: '100%', height: '40vh' }} src={`data:image/jpg;base64,${item.image.picByte}`} />}>\r\n                                <Descriptions title={item.name} style={{ padding: '0px 10px 0px 10px' }}>\r\n                                    <Descriptions.Item label=\"giá\">{item.price} đồng</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"cửa hàng\" span={2}>{item.branchName}</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"mô tả\" span={3}>{item.description}</Descriptions.Item>\r\n                                    <Descriptions.Item label=\"thêm vào giỏ hàng\" span={3}>\r\n                                        <Form style={{ display: 'flex' }}\r\n                                            initialValues={{ remember: true }}\r\n                                            onFinish={(value) => this._handlerClickAddInvoice(value)}>\r\n                                            <Space>\r\n                                                <Form.Item name=\"quantity\" rules={[{ required: true, message: 'Mời nhập số lượng!' }]} >\r\n                                                    <Input type=\"number\" max={99} min={1} style={{ width: 120 }}></Input>\r\n                                                </Form.Item>\r\n                                                <Form.Item>\r\n                                                    <Button htmlType='submit' type=\"primary\" shape=\"round\" icon={<PlusCircleFilled style={{ display: 'inline-block', overflow: 'hidden' }} />}>Thêm</Button>\r\n                                                </Form.Item>\r\n                                            </Space>\r\n                                        </Form>\r\n\r\n                                    </Descriptions.Item>\r\n                                </Descriptions>\r\n                            </Card>\r\n\r\n\r\n                        </Col>\r\n                        <Col xs={0} md={2}></Col>\r\n                        <Col xs={24} md={12} style={{ paddingLeft: 30, paddingRight: 15 }}>\r\n                            <Row>\r\n                                <Col span={12}>\r\n                                    <Rate value={item.totalEvaluation} disabled style={{ marginLeft: \"2.5rem\" }}></Rate>\r\n                                    <span style={{ color: 'rgb(123, 121, 121)', marginLeft: 5, fontStyle: 'italic' }}>({item.numberOfEvaluations} đánh giá)</span>\r\n                                </Col>\r\n                                <Col span={12}>{showRateItem}</Col>\r\n                            </Row>\r\n\r\n                            <Divider orientation=\"left\">Bình luận<span>     ({item.numberOfComments}):</span></Divider>\r\n                            <Form  style = {{display: 'flex', width:'100%'}}\r\n                            onFinish={(value)=> this._handlerSubmitComment(value) }>\r\n                                <Form.Item \r\n                                style = {{ width:'85%'}} \r\n                                name = \"comment\" required={true}>\r\n                                    <TextArea autoSize = {true} value= {this.state.defaultCommentValue} />\r\n                                </Form.Item>\r\n                                <Form.Item \r\n                                style = {{ width:'15%'}} >\r\n                                    <Button htmlType=\"submit\" loading={this.state.submitting} style = {{ width:'100%'}}   type=\"primary\">\r\n                                        Bình luận\r\n      </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            <div style ={{height:320, overflowY:'scroll'}}>\r\n                            {showCommentList}\r\n                            </div>\r\n\r\n    \r\n\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            );\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <HeaderCustom navbar={<NavCustom />} />\r\n                <SubNavbar />\r\n                {showItemDetails}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport history from \"../util/History\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport SubNavbar from \"./SubNavBar\";\r\nimport { Row, Col, Card, Divider, Empty } from \"antd\";\r\nimport API from \"../service/API\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nexport default class Search extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            name: '',\r\n            items:'',\r\n            content :[],\r\n            total:0,\r\n            page:1,\r\n            size:20,\r\n            isLoading:false\r\n\r\n        }\r\n        this._loadComponent = this._loadComponent.bind(this);\r\n        this._handlerClickItem = this._handlerClickItem.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const name = query.get('name');\r\n        if(name){\r\n            this._loadComponent(name);\r\n            this.setState({\r\n                name:name\r\n            })\r\n        }\r\n        else{\r\n            this._loadComponent(this.state.name);\r\n        }\r\n       \r\n        \r\n\r\n    }\r\n\r\n    async _loadComponent(name = '', page = 1, size = 20){\r\n        const res = await API.searchItems(name, page, size );\r\n        if(res!= null){\r\n            this.setState({\r\n                items:res,\r\n                content:res.content,\r\n                total:res.total,\r\n                page:res.page,\r\n                size:res.pageSize\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    async _handlerPagination(name = '', page = 1){\r\n        this._loadComponent(name, page)\r\n    }\r\n\r\n    _handlerClickItem(id){\r\n        history.push('/items?id='+id);\r\n    }\r\n    render(){\r\n        const {items,content, total, page, size, name} = this.state;\r\n        console.log(items.content)\r\n        let showItems = (<Row><Empty style = {{width:'100%', height:'auto', marginTop:30}} /></Row>);\r\n        if (content.length) {\r\n            showItems = (\r\n                <Row style={{padding:'0px 30px'}}>\r\n                    {items.content.map(item => (\r\n                        <Col xs={8} md = {4} key={item.id} style={{padding:15}}>\r\n                            <Card hoverable onClick = {() => this._handlerClickItem(item.id)}\r\n                                cover={<img style={{ width: \"100%\", height: \"20vh\" }} src={`data:image/jpg;base64,${item.image.picByte}`} />}\r\n                            >\r\n                                {item.name}\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n\r\n                </Row>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <HeaderCustom navbar = {<NavCustom />}/>\r\n                <SubNavbar/>\r\n        <Divider  style = {{marginTop:0}}>Kết quả tìm kiếm cho \"{name}\":</Divider>\r\n                {showItems}\r\n                <div>\r\n                        <Pagination current ={page} total={total} pageSize={size}\r\n                        onChange = {(page) => this._handlerPagination(name, page)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport { Menu, Layout, Table, Button, Space, Drawer, Input, Col, Row, Form, message, Select } from \"antd\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { LaptopOutlined, BranchesOutlined, MenuFoldOutlined, UserOutlined, MenuUnfoldOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport User from \"../page/admin/User\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Kind from \"../page/admin/Kind\";\r\nimport nProgress from \"nprogress\";\r\nimport history from \"../util/History\";\r\nimport API from \"../service/API\";\r\nimport moment from 'moment';\r\nimport Pagination from \"./Pagination\";\r\nimport { PAGE_SIZE_INVOICE } from \"../constant/APIConstant\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { Option } from \"antd/lib/mentions\";\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class ManagerBranchsAndItems extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: '',\r\n      listBranch:[],\r\n      listKind:[],\r\n      pageSize: 1,\r\n      filter: '',\r\n      defaultIndexMenu: '9',\r\n      collapsed: false,\r\n      visible: false,\r\n      name:'',\r\n      address:'',\r\n      phone:'',\r\n      description:'',\r\n      timeOpen:'',\r\n      timeClose:'',\r\n      image:'',\r\n      price:'',\r\n      branchId:'',\r\n      kindId:''\r\n    }\r\n    this._onClickMenu = this._onClickMenu.bind(this);\r\n    this._loadComponent = this._loadComponent.bind(this);\r\n    this._getAllBranchs = this._getAllBranchs.bind(this);\r\n    this._getAllItems = this._getAllItems.bind(this);\r\n    this._handlerPagination = this._handlerPagination.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const filter = query.get('filter');\r\n    if (filter) {\r\n      let index = '9';\r\n      index = filter === 'branchs'\r\n        ? '8' : '9'\r\n      this.setState({\r\n        filter: filter,\r\n        defaultIndexMenu: index,\r\n      })\r\n    }\r\n\r\n    this._loadComponent();\r\n  }\r\n\r\n\r\n\r\n  async _loadComponent(page = 1) {\r\n    const role = await API.getCurrentRole();\r\n    if (role && role == 'ROLE_MANAGER') {\r\n      const managerId = await API.getCurrentId();\r\n      if (managerId && this.state.filter !== '') {\r\n        if (this.state.filter === 'items') {\r\n          this._getAllItems(managerId, page);\r\n        }\r\n        if (this.state.filter === 'branchs') {\r\n          this._getAllBranchs(managerId, page);\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  async _getAllBranchs(managerId, page = 1) {\r\n    const res = await API.getBranchByManagerId(managerId, page)\r\n    if (res != null) {\r\n      this.setState({\r\n        content: res,\r\n        pageSize: res.pageSize\r\n      })\r\n    }\r\n  }\r\n\r\n  async _getAllItems(managerId, page = 1) {\r\n    const res = await API.getItemByManagerId(managerId, page)\r\n    const res2 = await API.getBranchByManagerIdForSelect(managerId)\r\n    const res3 = await API.getAllKindForSelect()\r\n    if (res != null) {\r\n      this.setState({\r\n        content: res,\r\n        pageSize: res.pageSize,\r\n        listBranch:res2,\r\n        listKind: res3\r\n      })\r\n    }\r\n    console.log(res2)\r\n  }\r\n\r\n  async _handlerPagination(page = 1) {\r\n    this._loadComponent(page);\r\n\r\n  }\r\n\r\n\r\n  async _handlerClickDeleteBranch(id) {\r\n    const res = await API.deleteBranch(id);\r\n    if (res != null)\r\n      this._loadComponent();\r\n      console.log(res)\r\n\r\n  }\r\n\r\n  async _handlerClickDeleteItem(id) {\r\n   \r\n\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  toggle2() {\r\n    console.log(window.innerWidth)\r\n    if (window.innerWidth < 638) {\r\n      this.setState({\r\n        collapsed: true,\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        collapsed: false,\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  onSubmitNewBranch(e) {\r\n    console.log(e.image.target.files[0]);\r\n  }\r\n\r\n  async _onClickMenu(url) {\r\n    window.location.href = url;\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.type === 'file' ? event.target.files[0] : target.value;\r\n    const name = target.id;\r\n    this.setState({\r\n        [name]: value,\r\n    });\r\n    console.log(name +\"  \"+ value)\r\n};\r\n  handleSelectChangeBranch = (event) => {\r\n    \r\n    this.setState({\r\n      branchId: event\r\n    })\r\n    console.log(event)\r\n};\r\n  handleSelectChangeKind = (event) => {\r\n    this.setState({\r\n      kindId: event\r\n    })\r\n  \r\n    console.log(event)\r\n};\r\n\r\n  async submitAddBranch()\r\n  {\r\n    const {name, address, phone, description, timeOpen, timeClose, image} = this.state;\r\n    const managerId = await API.getCurrentId();\r\n    const res = await API.addNewBranch(name, address, description, phone, timeOpen, timeClose, image, managerId);\r\n    if(res != null){\r\n      message.success('Tạo mới cửa hàng thành công');\r\n      this._loadComponent()\r\n    }\r\n    else {\r\n      message.error('Tạo mới cửa hàng không thành công');\r\n    }\r\n\r\n  }\r\n\r\n  async submitAddItem()\r\n  {\r\n    const {name, price, branchId, kindId, description, image} = this.state;\r\n    const res = await API.addNewItem(name, price, branchId, kindId, description, image);\r\n    if(res != null){\r\n      message.success('Tạo mới sản phẩm thành công');\r\n      this._loadComponent();\r\n    }\r\n    else {\r\n      message.error('Tạo mới sản phẩm không thành công');\r\n    }\r\n    \r\n\r\n  }\r\n  render() {\r\n    const trigger = (this.state.collapsed)\r\n      ? <Menu mode=\"inline\" theme={'dark'}\r\n        style={{ height: '100%', width: 80 }}>\r\n        <MenuUnfoldOutlined\r\n          className='trigger'\r\n          onClick={() => this.toggle()}\r\n          style={{\r\n            marginTop: 16,\r\n            marginBottom: 'auto',\r\n            marginLeft: 5,\r\n            color: '#fff',\r\n            fontSize: 30,\r\n            display: 'block'\r\n          }}\r\n\r\n        />\r\n      </Menu>\r\n\r\n\r\n      : <Menu mode=\"inline\" theme={'dark'}\r\n        style={{ height: '100%', width: 80 }}>\r\n        <MenuFoldOutlined\r\n          className='trigger'\r\n          onClick={() => this.toggle()}\r\n          style={{\r\n            marginTop: 16,\r\n            marginBottom: 'auto',\r\n            marginLeft: 5,\r\n            color: '#fff',\r\n            fontSize: 30,\r\n            display: 'block'\r\n          }}\r\n\r\n        />\r\n      </Menu>\r\n\r\n\r\n    // Content\r\n\r\n    const { content, pageSize, filter, defaultIndexMenu, listBranch, listKind } = this.state;\r\n    console.log(content.pageSize)\r\n\r\n    const addItem = (filter === 'branchs')\r\n      ? (\r\n        <div style={{ float: 'right', position: 'absolute', top: 10, right: 7 }}>\r\n          <Button type=\"primary\" onClick={this.showDrawer}>\r\n            <PlusOutlined /> Thêm cửa hàng\r\n        </Button>\r\n          <Drawer\r\n            title=\"Thêm mới cửa hàng\"\r\n            width={720}\r\n            onClose={this.onClose}\r\n            visible={this.state.visible}\r\n            bodyStyle={{ paddingBottom: 80 }}\r\n            footer={\r\n              <div\r\n                style={{\r\n                  textAlign: 'right',\r\n                }}\r\n              >\r\n                <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                  Hủy\r\n              </Button>\r\n                <Button  form=\"addBranch\"   type=\"primary\" htmlType=\"submit\">\r\n                  Tạo\r\n              </Button>\r\n              </div>\r\n            }\r\n          >\r\n            <Form id = \"addBranch\" layout=\"vertical\" enctype=\"multipart/form-data\" hideRequiredMark onFinish={()=>this.submitAddBranch()} >\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Tên\"\r\n                    rules={[{ required: true, message: 'Vui lòng nhập tên cửa hàng' }]}\r\n                  >\r\n                    <Input placeholder=\"Nhập tên cửa hàng\" \r\n                    onChange={this.handleInputChange}/>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"address\"\r\n                    label=\"Địa chỉ\"\r\n                    rules={[{ required: true, message: 'Vui lòng nhập địa chỉ' }]}\r\n                  >\r\n                    <Input placeholder=\"Nhập địa chỉ\"\r\n                    onChange={this.handleInputChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"phone\"\r\n                    label=\"Số điện thoại\"\r\n                    rules={[{ required: true, message: \"Vui lòng nhập số điện thoại\" }]}\r\n                  >\r\n                    <Input placeholder=\"Nhập số điện thoại\" \r\n                    onChange={this.handleInputChange}/>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"description\"\r\n                    label=\"Mô tả\"\r\n                    rules={[{ required: true, message: 'Vui lòng nhập mô tả' }]}\r\n                  >\r\n                    <Input placeholder=\"Nhập mô tả\"\r\n                    onChange={this.handleInputChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"timeOpen\"\r\n                    label=\"Thời gian mở cửa\"\r\n                    rules={[{ required: true, message: \"Vui lòng nhập thời gian mở cửa\" }]}\r\n                  >\r\n                    <Input type={'time'} placeholder=\"Nhập thời gian mở cửa\" \r\n                    onChange={this.handleInputChange}/>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"timeClose\"\r\n                    label=\"Thời gian đóng cửa\"\r\n                    rules={[{ required: true, message: 'Vui lòng nhập thời gian đóng cửa' }]}\r\n                  >\r\n                    <Input type={'time'} placeholder=\"Nhập thời gian đóng cửa\"\r\n                    onChange={this.handleInputChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"image\"\r\n                    label=\"Ảnh đại diện\"\r\n                    rules={[{ required: true, message: 'Vui lòng chọn ảnh đại diện' }]}\r\n                  >\r\n                    <Input onChange={this.handleInputChange}\r\n                     type={'file'} placeholder=\"Chọn ảnh đại diện\"\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n\r\n            </Form>\r\n          </Drawer>\r\n        </div>\r\n      ) : (\r\n        <div style={{ float: 'right', position: 'absolute', top: 10, right: 7 }}>\r\n          <Button type=\"primary\" onClick={this.showDrawer}>\r\n            <PlusOutlined /> Thêm món mới\r\n        </Button>\r\n          <Drawer\r\n            title=\"Thêm món mới\"\r\n            width={720}\r\n            onClose={this.onClose}\r\n            visible={this.state.visible}\r\n            bodyStyle={{ paddingBottom: 80 }}\r\n            footer={\r\n              <div\r\n                style={{\r\n                  textAlign: 'right',\r\n                }}\r\n              >\r\n                <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                  Hủy\r\n              </Button>\r\n                <Button  form=\"addItem\"   type=\"primary\" htmlType=\"submit\">\r\n                  Tạo\r\n              </Button>\r\n              </div>\r\n            }\r\n          >\r\n            <Form id = \"addItem\" layout=\"vertical\" enctype=\"multipart/form-data\" hideRequiredMark onFinish={()=>this.submitAddItem()} >\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Tên\"\r\n                    rules={[{ required: true, message: 'Please enter  name' }]}\r\n                  >\r\n                    <Input placeholder=\"Vui lòng nhập tên sản phẩm\" \r\n                    onChange={this.handleInputChange}/>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"price\"\r\n                    label=\"Giá\"\r\n                    rules={[{ required: true, message: 'Vui lòng nhập giá' }]}\r\n                  >\r\n                    <Input placeholder=\"Nhập giá sản phẩm\" type = \"number\"\r\n                    onChange={this.handleInputChange}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"branchId\"\r\n                    label=\"Cửa hàng\"\r\n                    rules={[{ required: true, message: \"Vui lòng chọn cửa hàng\" }]}\r\n                  >\r\n                    <Select name=\"branchId\"\r\n                    onChange={this.handleSelectChangeBranch}\r\n                    placeholder=\"Chọn cửa hàng\">\r\n                    {listBranch.map(branch=>(\r\n                       <Option  value={branch.id}>{branch.name}</Option>\r\n                    ))}\r\n                  </Select>                    \r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"kindId\"\r\n                    label=\"Loại sản phẩm\"\r\n                    rules={[{ required: true, message: 'Vui lòng chọn loại' }]}\r\n                  >\r\n                    <Select name=\"kindId\"\r\n                    onChange={this.handleSelectChangeKind}\r\n                    placeholder=\"Chọn loại sản phẩm\">\r\n                    {listKind.map(kind=>(\r\n                       <Option  value={kind.id}>{kind.name}</Option>\r\n                    ))}\r\n                  </Select>       \r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row gutter={16}>\r\n                <Col span={12}>\r\n                  <Form.Item\r\n                    name=\"description\"\r\n                    label=\"Mô tả\"\r\n                    rules={[{ required: true, message: \"Vui lòng nhập tên mô tả\" }]}\r\n                  >\r\n                    <Input type={'text'} placeholder=\"Nhập mô tả sản phẩm\" \r\n                    onChange={this.handleInputChange}/>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                <Form.Item\r\n                    name=\"image\"\r\n                    label=\"Ảnh đại diện\"\r\n                    rules={[{ required: true, message: 'Vui lòng chọn ảnh đại diện' }]}\r\n                  >\r\n                    <Input onChange={this.handleInputChange}\r\n                     type={'file'} placeholder=\"Chọn ảnh đại diện\"\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Drawer>\r\n        </div>\r\n      )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const title = (filter === 'branchs')\r\n      ? 'Tất cả cửa hàng'\r\n      : 'Tất cả sản phẩm';\r\n    const columns = (filter === 'branchs')\r\n      ? [\r\n        {\r\n          title: 'Ngày tạo',\r\n          dataIndex: 'created',\r\n          render: created => moment(created).format(\"hh:mm DD-MM-yyyy\")\r\n        },\r\n        {\r\n          title: 'Ngày sửa',\r\n          dataIndex: 'modified',\r\n          render: modified => moment(modified).format(\"hh:mm DD-MM-yyyy\")\r\n        },\r\n        {\r\n          title: 'Id',\r\n          dataIndex: 'id',\r\n          className: 'hide'\r\n        },\r\n\r\n        {\r\n          title: 'Tên cửa hàng',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: 'Trạng thái',\r\n          dataIndex: 'status'\r\n        },\r\n\r\n        {\r\n          title: 'Thao tác',\r\n          dataIndex: 'id',\r\n          render: (id) =>\r\n            <Space> <Button danger onClick={() => this._handlerClickDeleteBranch(id)}>Xóa</Button></Space>\r\n\r\n        },\r\n\r\n\r\n\r\n      ]\r\n\r\n      : [\r\n        {\r\n          title: 'Ngày tạo',\r\n          dataIndex: 'created',\r\n          render: created => moment(created).format(\"hh:mm DD-MM-yyyy\")\r\n        },\r\n        {\r\n          title: 'Ngày sửa',\r\n          dataIndex: 'modified',\r\n          render: modified => moment(modified).format(\"hh:mm DD-MM-yyyy\")\r\n        },\r\n        {\r\n          title: 'Id',\r\n          dataIndex: 'id',\r\n          className: 'hide'\r\n        },\r\n\r\n        {\r\n          title: 'Tên sản phẩm',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: 'Trạng thái',\r\n          dataIndex: 'status'\r\n        },\r\n\r\n        {\r\n          title: 'Thao tác',\r\n          dataIndex: 'status',\r\n          render: (row) =>\r\n            <Space> <Button danger disabled onClick={() => this._handlerClickDeleteItem(row.id)}>Xóa</Button></Space>\r\n\r\n        },\r\n\r\n\r\n\r\n      ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <HeaderCustom trigger={trigger} navbar={<NavCustom />} />\r\n\r\n        <Layout className=\"main-layout\" style={{ border: '4px #f0f2f5 solid' }}>\r\n          <Sider theme='light' width={230} breakpoint='md' onBreakpoint={() => this.toggle2()} trigger={null} collapsible collapsed={this.state.collapsed} className=\"site-layout-background\">\r\n            <Menu className=\"menu-custom\"\r\n              mode=\"inline\"\r\n              defaultOpenKeys={[\"sub2\"]}\r\n\r\n              selectedKeys={defaultIndexMenu}\r\n              style={{ height: '100%', borderRight: 0 }}\r\n            >\r\n              <SubMenu\r\n                key=\"sub1\"\r\n                icon={<UserOutlined className='font-size-menu' />}\r\n                title={\r\n                  <span className='font-size-menu'>\r\n                    Đơn Hàng\r\n                  </span>\r\n                }\r\n              >\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers')} className='font-size-sub-menu' key=\"2\">Tất cả</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=ordered')} className='font-size-sub-menu' key=\"3\">Đang chờ</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=preparing')} className='font-size-sub-menu' key=\"4\">Đang chuẩn bị</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=delivering')} className='font-size-sub-menu' key=\"5\">Đang giao</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=succesfully')} className='font-size-sub-menu' key=\"6\">Thành công</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers?filter=failed')} className='font-size-sub-menu' key=\"7\">Không thành công</Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu\r\n                key=\"sub2\"\r\n                icon={<LaptopOutlined className='font-size-menu' />}\r\n                title={\r\n                  <span className='font-size-menu'>\r\n                    Món ăn\r\n                  </span>\r\n                }\r\n              >\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers-branchs-items?filter=branchs')} className='font-size-sub-menu' key=\"8\">Cửa hàng</Menu.Item>\r\n                <Menu.Item onClick={() => this._onClickMenu('/managers-branchs-items?filter=items')} className='font-size-sub-menu' key=\"9\">Sản phẩm</Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout style={{ padding: 0 }} className=\"site-layout\">\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              <div style={{ border: '2px solid #fafafa', marginBottom: 24, position: 'relative' }}>\r\n                <Title style={{ textAlign: \"center\", color: 'rgb(117, 114, 114)', fontSize: 22, marginBottom: 13, marginTop: 13 }}>{title}</Title>\r\n                {addItem}\r\n              </div>\r\n              <Table columns={columns}\r\n                dataSource={content.content}\r\n                pagination={false}\r\n              />\r\n              <div>\r\n                <Pagination current={content.page} total={content.total} pageSize={pageSize}\r\n                  onChange={(page) => this._handlerPagination(page)} />\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport NavCustom from \"./NavCustom\";\r\nimport HeaderCustom from \"./HeaderCustom\";\r\nimport SubNavbar from \"./SubNavBar\";\r\nimport API from \"../service/API\";\r\nimport { Result, Button } from \"antd\";\r\nimport history from \"../util/History\";\r\n\r\nexport default class PurchaseCallback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPurchaseSuccess: false,\r\n            appTransId: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const amount = query.get('amount');\r\n        const discountamount = query.get('discountamount');\r\n        const appid = query.get('appid');\r\n        const checksum = query.get('checksum');\r\n        const apptransid = query.get('apptransid');\r\n        const pmcid = query.get('pmcid');\r\n        const bankcode = query.get('bankcode');\r\n        const status = query.get('status');\r\n\r\n\r\n        console.log(amount);\r\n        console.log(discountamount);\r\n        console.log(appid);\r\n        console.log(checksum);\r\n        console.log(apptransid);\r\n        console.log(pmcid);\r\n        console.log(bankcode);\r\n        console.log(status);\r\n\r\n        const res = await API.checksum(amount, discountamount, appid, checksum, apptransid, pmcid, bankcode, status);\r\n\r\n        if (res != null) {\r\n            this.setState({\r\n                isPurchaseSuccess: true,\r\n                appTransId: apptransid\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { isPurchaseSuccess,appTransId } = this.state;\r\n        let showResult = (isPurchaseSuccess == true)\r\n            ? (\r\n                <div>\r\n                    <Result\r\n                        status=\"success\"\r\n                        title=\"Thanh toán thành công!\"\r\n                        subTitle= {\"mã giao dịch: \"+appTransId+\". Cảm ơn bạn đã sử dụng dịch vụ!\"}\r\n                        extra={[\r\n                            <Button onClick ={()=> history.push('/invoices-history')} type=\"primary\">\r\n                                Xem lại lịch sử\r\n                            </Button>,\r\n                            <Button onClick ={()=> history.push('/')}>Về trang chủ</Button>,\r\n                        ]}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n            : (\r\n                <div>\r\n\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <div>\r\n                <HeaderCustom navbar={<NavCustom />} />\r\n                <SubNavbar />\r\n                {showResult}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {  Switch, Route, BrowserRouter, Router } from 'react-router-dom';\r\nimport Admin from '../page/admin/Admin';\r\nimport './App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport nprogress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nimport Kind from '../page/admin/Kind';\r\nimport User from '../page/admin/User';\r\nimport LoadRoute from './LoadRouter';\r\nimport Routes from './Routes';\r\nimport NavCustom from '../component/NavCustom';\r\nimport Product from '../page/product/Product';\r\nimport 'antd/dist/antd.css';\r\nimport Bracnh from '../component/Branch';\r\nimport Wellcome from '../component/Wellcome';\r\nimport BranchDetails from '../component/BranchDetails';\r\nimport Test from '../component/Test';\r\nimport Invoice from '../component/Invoice';\r\nimport Singin from '../page/Singin';\r\nimport history from '../util/History';\r\nimport ManagerHomePage from '../component/ManagerHomePage';\r\nimport ShipperHomePage from '../component/ShipperHomePage';\r\nimport InvoiceHistory from '../component/InvoiceHistory';\r\nimport ItemDetails from '../component/ItemDetails';\r\nimport Search from '../component/Search';\r\nimport ManagerBranchsAndItems from '../component/ManagerBranchsAndItems';\r\nimport PurchaseCallback from '../component/PurchaseCallBack';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Router history = {history}>\r\n       <div>          \r\n          {/* <Route exact path=\"/\" render = {props => <Product {...props} isAuth = {true} content = {<Wellcome />} />} /> */}\r\n          <Route exact path=\"/\" component={Wellcome} />\r\n          <Route exact path=\"/branchs\" component = {Bracnh} />\r\n          <Route path=\"/branchs-details\" component={BranchDetails} />\r\n          <Route exact path=\"/invoices\" component={Invoice} />\r\n          <Route exact path=\"/invoices-history\" component={InvoiceHistory} />\r\n          <Route exact path=\"/admins\" component={Admin} />\r\n          <Route exact path=\"/singin\" component={Singin} />\r\n          <Route path=\"/managers\" component={ManagerHomePage} />\r\n          <Route path=\"/managers-branchs-items\" component={ManagerBranchsAndItems} />\r\n          <Route exact path=\"/shippers\" component={ShipperHomePage} />\r\n          <Route exact path=\"/items\" component={ItemDetails} />\r\n          <Route exact path=\"/search\" component={Search} />\r\n          <Route exact path=\"/purchase-callback\" component={PurchaseCallback} />\r\n          \r\n          {/* {Routes.map((route, i) =>\r\n            <LoadRoute key={i} {...route} />\r\n          )} */}\r\n        \r\n        </div>\r\n      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}